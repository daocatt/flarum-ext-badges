{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@gtdxyz/flarum-ext-badges/webpack/bootstrap","webpack://@gtdxyz/flarum-ext-badges/webpack/runtime/compat get default export","webpack://@gtdxyz/flarum-ext-badges/webpack/runtime/define property getters","webpack://@gtdxyz/flarum-ext-badges/webpack/runtime/hasOwnProperty shorthand","webpack://@gtdxyz/flarum-ext-badges/webpack/runtime/make namespace object","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/app']\"","webpack://@gtdxyz/flarum-ext-badges/./src/common/index.js","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['forum/app']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['extend']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['Model']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['models/User']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/UserPage']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['utils/UserControls']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/LinkButton']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Button']\"","webpack://@gtdxyz/flarum-ext-badges/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@gtdxyz/flarum-ext-badges/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['utils/mixin']\"","webpack://@gtdxyz/flarum-ext-badges/./src/common/models/Badge.js","webpack://@gtdxyz/flarum-ext-badges/./src/common/models/BadgeCategory.js","webpack://@gtdxyz/flarum-ext-badges/./src/common/models/UserBadge.js","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/Component']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@gtdxyz/flarum-ext-badges/./src/common/components/UserBadge.tsx","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Modal']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['utils/ItemList']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Select']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['utils/Stream']\"","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/GiveBadgeModal.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/utils/hextorgba.ts","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/BadgeModal.tsx","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/UserBadgesContent.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/utils/categorizeUserBadges.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/UserBadgesPage.js","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Page']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/IndexPage']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Link']\"","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/View/TableView.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/View/BlockListView.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/BadgesPage.js","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['helpers/avatar']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['helpers/humanTime']\"","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/BadgeDetailContent.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/BadgeDetailPage.js","webpack://@gtdxyz/flarum-ext-badges/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/states/PaginatedListState']\"","webpack://@gtdxyz/flarum-ext-badges/./src/forum/states/BadgeUsersState.js","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@gtdxyz/flarum-ext-badges/./src/forum/notification/BadgeReceivedNotification.js","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['forum/components/NotificationGrid']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/extend']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['forum/components/UserCard']\"","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/UserCardBadge.tsx","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/UserCardBadgeModal.tsx","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Switch']\"","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/SelectUserCardBadgesModal.tsx","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@gtdxyz/flarum-ext-badges/./src/forum/states/UserBadgesState.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/index.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/addSidebarNav.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/addBadgesToUserCard.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\n\napp.initializers.add('gtdxyz/flarum-user-badges', () => {\n  // console.log('[gtdxyz/flarum-user-badges] Hello, forum and admin!')\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/UserPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/UserControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Button'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/mixin'];","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Badge extends mixin(Model, {\n  name: Model.attribute('name'),\n  icon: Model.attribute('icon'),\n  order: Model.attribute('order'),\n  image: Model.attribute('image'),\n  description: Model.attribute('description'),\n  isVisible: Model.attribute('isVisible'),\n  createdAt: Model.attribute('createdAt'),\n  earnedAmount: Model.attribute('earnedAmount'),\n  category: Model.hasOne('category'),\n  backgroundColor: Model.attribute('backgroundColor'),\n  iconColor: Model.attribute('iconColor'),\n  labelColor: Model.attribute('labelColor'),\n}) {\n  apiEndpoint() {\n    return '/badges' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class BadgeCategory extends mixin(Model, {\n  name: Model.attribute('name'),\n  order: Model.attribute('order'),\n  description: Model.attribute('description'),\n  isEnabled: Model.attribute('isEnabled'),\n  createdAt: Model.attribute('createdAt'),\n  isTable: Model.attribute('isTable'),\n  users: Model.hasMany('users'),\n  badges: Model.hasMany('badges'),\n}) {\n  apiEndpoint() {\n    return '/badge-categories' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class UserBadge extends mixin(Model, {\n  user: Model.hasOne('user'),\n  badge: Model.hasOne('badge'),\n  description: Model.attribute('description'),\n  isPrimary: Model.attribute('isPrimary'),\n  assignedAt: Model.attribute('assignedAt'),\n  inUserCard: Model.attribute('inUserCard'),\n}) {\n  apiEndpoint() {\n    return '/user-badges' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import Component from 'flarum/common/Component';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport BadgeModal from '../../forum/components/BadgeModal';\n\nexport default class UserBadge extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.tooltip = this.attrs.tooltip !== false;\n    this.forceVisibility = this.attrs.forceVisibility === true;\n    this.displayName = this.attrs.displayName === true;\n  }\n\n  view() {\n    // Hide badge when not enabled\n    if (!this.attrs.badge.isVisible() && !this.forceVisibility) {\n      return null;\n    }\n\n    // Just show badge\n    if (this.tooltip === false) return this.badge();\n\n    return <Tooltip text={`${this.attrs.badge.description() ? this.attrs.badge.description() : ''}`}>{this.badge()}</Tooltip>;\n  }\n\n  badge() {\n    const isPartlyHidden = !this.attrs.badge.isVisible() && this.forceVisibility;\n\n    // This badge is an image\n    if (this.attrs.badge.image()) {\n      return (\n        <span style={this.displayName ? 'display:flex;justify-content:flex-start;align-items:center;' : 'display:inline-block;'}>\n          <img\n            src={this.attrs.badge.image()}\n            className={'UserBadgeImage'}\n            onclick={() => {\n              if (this.attrs.onclick) {\n                this.attrs.onclick();\n              }\n            }}\n            style={{\n              opacity: isPartlyHidden ? 0.5 : undefined,\n            }}\n          />\n          {this.displayName && this.attrs.badge.name()}\n        </span>\n      );\n    }\n\n    return (\n      <span\n        className={`UserBadge UserBadge-${this.attrs.badge.id()}`}\n        onclick={() => {\n          if (this.attrs.onclick) {\n            this.attrs.onclick();\n          }\n        }}\n        style={{\n          backgroundColor: this.attrs.badge.backgroundColor(),\n          color: this.attrs.badge.labelColor(),\n          borderColor: this.attrs.badge.backgroundColor(),\n          opacity: isPartlyHidden ? 0.5 : undefined,\n        }}\n      >\n        <i className={this.attrs.badge.icon()} style={{ color: this.attrs.badge.iconColor() }} /> {this.attrs.badge.name()}\n      </span>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Select'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/Stream'];","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport ItemList from 'flarum/utils/ItemList';\nimport Select from 'flarum/components/Select';\nimport Stream from 'flarum/utils/Stream';\nimport BadgeModal from './BadgeModal';\n\nexport default class GiveBadgeModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Select image\n    this.selectedBadge = this.attrs.badge ? this.attrs.badge.badge() : null;\n\n    // Current user\n    this.user = this.attrs.badge ? this.attrs.badge.user() : this.attrs.user;\n\n    // User has badge\n    this.userHasBadge = false;\n\n    // Badge model\n    this.badge = this.attrs.badge ? this.attrs.badge : app.store.createRecord('userBadges');\n\n    // Earning reason\n    this.description = Stream(this.badge.description());\n\n    app.userBadges.load(this.user.attribute('username'));\n\n    // List of available bagges\n    this.categories = {};\n\n    this.uncategorizedBadges = [];\n\n    this.loading = false;\n\n    // Load all available badges\n    if (!this.attrs.badge) {\n      this.loading = true;\n\n      app.store\n        .find('badges', {\n          include: 'category',\n        })\n        .then((badges) => {\n          badges.forEach((badge) => {\n            // Categorized\n            if (badge.category()) {\n              const category = badge.category();\n\n              if (!this.categories[category.id()]) {\n                this.categories[category.id()] = {\n                  category,\n                  badges: [badge],\n                };\n              } else {\n                this.categories[category.id()].badges.push(badge);\n              }\n            }\n            // Uncategorized\n            else {\n              this.uncategorizedBadges.push(badge);\n            }\n          });\n\n          this.loading = false;\n\n          // Redraw\n          m.redraw();\n        });\n    }\n  }\n\n  className() {\n    return 'Modal--small BadgeModal';\n  }\n\n  title() {\n    return app.translator.trans(`gtdxyz-flarum-badges.forum.${this.badge.exists ? 'update' : 'give'}_badge`);\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">\n          <div className=\"Form\">{this.fields().toArray()}</div>\n        </div>\n\n        <div className=\"Modal-footer\">\n          <Button className={'Button Button--primary'} type={'submit'} loading={this.loading} disabled={this.userHasBadge}>\n            {app.translator.trans('core.forum.composer_edit.submit_button')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    // Badge selector\n    items.add(\n      'badge',\n      <div className=\"BadgeModalListItem\">\n        <p>\n          <b>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.badge')}</b>\n        </p>\n\n        <div className={'Select'}>\n          <select\n            value={this.selectedBadge ? this.selectedBadge.id() : 'empty'}\n            disabled={!!this.attrs.badge}\n            onchange={(e) => {\n              if (e.target.value === 'empty') return;\n              this.selectedBadge = app.store.getById('badges', e.target.value);\n\n              // Check if the user already has this badge\n              this.checkUserHasBadge(this.selectedBadge);\n            }}\n            className=\"Select-input FormControl\"\n          >\n            <option value={'empty'}>{app.translator.trans('gtdxyz-flarum-badges.forum.select_badge')}</option>\n\n            {/* When no badge is selected, show all available badges */}\n            {!this.attrs.badge &&\n              Object.values(this.categories).map(({ category, badges }) => (\n                <optgroup label={category.name()}>\n                  {badges.map((badge) => (\n                    <option value={badge.id()}>{badge.name()}</option>\n                  ))}\n                </optgroup>\n              ))}\n\n            {!this.attrs.badge && this.uncategorizedBadges.length >= 1 && (\n              <optgroup label={app.translator.trans('gtdxyz-flarum-badges.forum.uncategorized')}>\n                {this.uncategorizedBadges.map((badge) => (\n                  <option value={badge.id()}>{badge.name()}</option>\n                ))}\n              </optgroup>\n            )}\n\n            {/* When a badge is already assigned */}\n            {!!this.attrs.badge && <option value={this.selectedBadge.id()}>{this.selectedBadge.name()}</option>}\n          </select>\n          <i class=\"icon fas fa-caret-down Select-caret\"></i>\n        </div>\n\n        {this.userHasBadge && <p className={'UserHasBadge'}>{app.translator.trans('gtdxyz-flarum-badges.forum.user_has_badge')}</p>}\n      </div>,\n      30\n    );\n\n    // Badge description\n    items.add(\n      'badge_description',\n      <div className={'BadgeModalListItem'}>\n        {/* <p>\n          <b>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.description')}:</b>\n        </p> */}\n        <p>{this.selectedBadge ? this.selectedBadge.description() : app.translator.trans('gtdxyz-flarum-badges.forum.select_badge')}</p>\n      </div>,\n      30\n    );\n\n    // Badge earning reason\n    items.add(\n      'description',\n      <div className=\"BadgeModalListItem\">\n        <p>\n          <b>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.earning_reason')}</b>\n        </p>\n        <textarea\n          className=\"FormControl\"\n          placeholder={app.translator.trans('gtdxyz-flarum-badges.forum.badge.earning_reason')}\n          bidi={this.description}\n        />\n      </div>,\n      30\n    );\n\n    return items;\n  }\n\n  checkUserHasBadge(badge) {\n    let foundBadge = false;\n\n    let currentBadges = app.userBadges.cache || [];\n\n    currentBadges.map((userBadge) => {\n      if (userBadge.badge() == badge) {\n        foundBadge = true;\n      }\n    });\n\n    this.userHasBadge = foundBadge;\n\n    m.redraw();\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    this.badge\n      .save({\n        description: this.description(),\n        relationships: this.attrs.badge\n          ? {}\n          : {\n              badge: this.selectedBadge,\n              user: this.user,\n            },\n      })\n      .then(\n        () => {\n          // Re-open badge modal\n          if (this.attrs.badge) {\n            app.modal.show(BadgeModal, {\n              badge: this.attrs.badge.badge(),\n              userBadgeData: this.attrs.badge,\n            });\n          } else {\n            this.hide();\n          }\n\n          m.redraw();\n        },\n        (response) => {\n          this.loading = false;\n          this.handleErrors(response);\n        }\n      );\n  }\n}\n","export default function hextorgba(hexcolor: string | null, opacity: number | 1): string {\n  // return if hexcolor is undefined or shorter than 4 characters, shortest hex form is #333;\n  // decided against regex hex color validation for performance considerations\n  if (!hexcolor || hexcolor.length < 4) {\n    return '';\n  }\n\n  let hexnumbers = hexcolor.replace('#', '');\n\n  if (hexnumbers.length === 3) {\n    hexnumbers += hexnumbers;\n  }\n\n  const r = parseInt(hexnumbers.slice(0, 2), 16);\n  const g = parseInt(hexnumbers.slice(2, 4), 16);\n  const b = parseInt(hexnumbers.slice(4, 6), 16);\n\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + opacity + ')';\n}\n","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport type dayjs from 'dayjs';\nimport ItemList from 'flarum/utils/ItemList';\nimport LinkButton from 'flarum/components/LinkButton';\nimport GiveBadgeModal from './GiveBadgeModal';\nimport hextorgba from '../utils/hextorgba';\n\nexport default class BadgeModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.loading = false;\n  }\n\n  className() {\n    return 'Modal--small BadgeModal BadgeModal-plain';\n  }\n\n  title() {\n    // return app.translator.trans('gtdxyz-flarum-badges.forum.badge_information');\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">{this.data().toArray()}</div>\n        <div className=\"Modal-footer\">\n          <LinkButton\n            href={app.route('badges.detail', {\n              id: this.attrs.badge.id(),\n            })}\n            className={'Button'}\n            style={{\n              margin: '0 10px',\n            }}\n          >\n            {app.translator.trans('gtdxyz-flarum-badges.forum.badge.badge_details')}\n          </LinkButton>\n\n          {this.attrs.userBadgeData && app.forum.attribute('canGiveBadge') && (\n            <Button\n              className={'Button Button--primary'}\n              onclick={() => {\n                if (confirm(app.translator.trans('gtdxyz-flarum-badges.forum.moderation.remove_badge_confirm'))) {\n                  this.loading = true;\n                  this.attrs.userBadgeData.delete().then(() => this.hide());\n                }\n              }}\n              loading={this.loading}\n            >\n              {app.translator.trans('gtdxyz-flarum-badges.forum.moderation.remove_badge')}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  data() {\n    const items = new ItemList();\n    const radials = hextorgba(this.attrs.badge.backgroundColor(), 0.7);\n    const radiale = hextorgba(this.attrs.badge.backgroundColor(), 1);\n\n    // Badge name\n    items.add(\n      'name',\n      <div\n        className={'BadgeModalListItem name'}\n        style={{\n          background: 'radial-gradient(' + radials + ',' + radiale + ')',\n        }}\n      >\n        {this.attrs.badge.image() ? (\n          <img src={this.attrs.badge.image()} className=\"icon\" />\n        ) : (\n          <i className={this.attrs.badge.icon()} style={'color:' + this.attrs.badge.iconColor()}></i>\n        )}\n      </div>\n    );\n\n    // Badge description\n    items.add(\n      'description',\n      <div className={'BadgeModalListItem description'}>\n        <p className=\"name\">{this.attrs.badge.name()}</p>\n        <p>{this.attrs.badge.description()}</p>\n      </div>\n    );\n\n    // Badge category\n    if (this.attrs.userBadgeData) {\n      items.add(\n        'category',\n        <div className={'BadgeModalListItem category'}>\n          {/* <p>\n            <b>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.category')}:</b>\n          </p> */}\n          <p>\n            {this.attrs.badge.category() && this.attrs.badge.category().name()}\n\n            {/* Uncategorized */}\n            {!this.attrs.badge.category() && app.translator.trans('gtdxyz-flarum-badges.forum.uncategorized')}\n            {/* <Link\n              href={app.route(\"badges.category\", {\n                category: this.attrs.badge.category().id(),\n              })}\n            >\n              {app.translator.trans(\n                \"gtdxyz-flarum-badges.forum.all_badges\"\n              )}\n            </Link> */}\n          </p>\n        </div>\n      );\n    }\n\n    // Badge amount\n    // if (this.attrs.badge && this.attrs.badge.earnedAmount()) {\n    //   items.add(\n    //     'earned_amount',\n    //     <div className={'BadgeModalListItem'}>\n    //       <p>\n    //         {app.translator.trans('gtdxyz-flarum-badges.forum.badge.earned_count', {\n    //           count: this.attrs.badge.earnedAmount(),\n    //         })}\n    //       </p>\n    //     </div>\n    //   );\n    // }\n\n    // Badge earned on\n    if (this.attrs.userBadgeData) {\n      const earned_at = dayjs(this.attrs.userBadgeData.assignedAt()).format('YYYY-MM-DD');\n      items.add(\n        'earned_date',\n        <div className={'BadgeModalListItem earned-on'}>\n          <p>{earned_at}</p>\n        </div>\n      );\n    }\n\n    // Badge earning reason\n    const earning_reason = false;\n    if (earning_reason && this.attrs.userBadgeData && (this.attrs.userBadgeData.description() || app.forum.attribute('canGiveBadge'))) {\n      items.add(\n        'earning_reason',\n        <div className={'BadgeModalListItem'}>\n          <p>\n            <b>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.earning_reason')}:</b>\n          </p>\n\n          <p>\n            {this.attrs.userBadgeData.description() ? (\n              this.attrs.userBadgeData.description()\n            ) : (\n              <i>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.no_earning_reason')}</i>\n            )}\n          </p>\n          <p>\n            {app.forum.attribute('canGiveBadge') && (\n              <a\n                href={'#'}\n                onclick={(e) => {\n                  e.preventDefault();\n                  app.modal.show(GiveBadgeModal, {\n                    badge: this.attrs.userBadgeData,\n                  });\n                }}\n              >\n                {app.translator.trans('gtdxyz-flarum-badges.forum.badge.update_earning_reason')}\n              </a>\n            )}\n          </p>\n        </div>\n      );\n    }\n\n    return items;\n  }\n}\n","import Component from 'flarum/common/Component';\nimport UserBadge from '../../common/components/UserBadge';\nimport categorizeUserBadges from '../utils/categorizeUserBadges';\nimport BadgeModal from './BadgeModal';\n\nexport default class UserBadgesContent extends Component {\n  view() {\n    const badgesList = app.userBadges.cache || [];\n\n    const categories = categorizeUserBadges(badgesList);\n\n    return (\n      <div className=\"UserBadges\">\n        {categories.length === 0 && (\n          <div className={'Placeholder'}>\n            <p>{app.translator.trans('gtdxyz-flarum-badges.forum.user_no_badges')}</p>\n          </div>\n        )}\n\n        {categories.length >= 1 &&\n          categories.map(({ name, category, badges }) => {\n            if (category && !category.isEnabled()) return null;\n\n            return (\n              <div className={'UserBadgesCategory'}>\n                <h3>{name}</h3>\n\n                {category && category.description() && <p>{category.description()}</p>}\n                <div className=\"badgeList\">\n                  {badges\n                    .sort((a, b) => a.badge().order() - b.badge().order())\n                    .map((userBadge) => (\n                      <UserBadge\n                        badge={userBadge.badge()}\n                        onclick={() =>\n                          app.modal.show(BadgeModal, {\n                            badge: userBadge.badge(),\n                            userBadgeData: userBadge,\n                          })\n                        }\n                      />\n                    ))}\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n}\n","export default function categorizeUserBadges(badges) {\n  const categories = {};\n  const uncategorized = [];\n  const badgesList = badges || [];\n\n  badgesList.map((userBadge) => {\n    if (!userBadge) return null;\n\n    // Categorized\n    if (userBadge.badge().category()) {\n      const category = userBadge.badge().category();\n\n      if (!categories[category.id()]) {\n        categories[category.id()] = {\n          name: category.name(),\n          category,\n          badges: [userBadge],\n        };\n      } else {\n        categories[category.id()].badges.push(userBadge);\n      }\n    }\n    // Uncategorized\n    else {\n      uncategorized.push(userBadge);\n    }\n  });\n\n  // Sort categories and map them into an array\n  let sortedCategories = Object.keys(categories)\n    .sort((a, b) => categories[a].category.order() - categories[b].category.order())\n    .map((category) => categories[category]);\n\n  // Add uncategorized category to list\n  if (uncategorized.length >= 1) {\n    sortedCategories.push({\n      name: app.translator.trans('gtdxyz-flarum-badges.forum.uncategorized'),\n      category: null,\n      badges: uncategorized,\n    });\n  }\n\n  return sortedCategories;\n}\n","import UserPage from 'flarum/components/UserPage';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport UserBadgesContent from './UserBadgesContent';\n\nexport default class UserBadgesPage extends UserPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.user = null;\n\n    this.loading = true;\n\n    this.loadUser(m.route.param('username'));\n    app.userBadges.load(m.route.param('username'));\n  }\n\n  content() {\n    if (!this.user || this.loading) {\n      return <LoadingIndicator size={46} />;\n    }\n\n    if (app.session.user) {\n      return UserBadgesContent.component({\n        user: this.user,\n      });\n    } else {\n      return (\n        <div className={'Placeholder'}>\n          <p>{app.translator.trans('gtdxyz-flarum-badges.forum.hidden_badges')}</p>\n        </div>\n      );\n    }\n  }\n\n  show(user) {\n    super.show(user);\n    this.user = user;\n\n    this.loading = false;\n\n    // app.store\n    //   .find('user-badges', {\n    //     filter: {user: this.user.username()}\n    //   })\n    //   .then(() => {\n    //     this.loading = false;\n    //     m.redraw();\n    //   });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/listItems'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Link'];","import Component from 'flarum/common/Component';\nimport Link from 'flarum/components/Link';\nimport UserBadge from '../../../common/components/UserBadge';\n\nexport default class TableView extends Component {\n  view() {\n    if (!this.attrs.badges) {\n      return null;\n    }\n\n    const badges = this.attrs.badges;\n\n    return (\n      <table width={'100%'} className={'BadgeTable'}>\n        <thead>\n          <tr>\n            <th scope=\"col\">{app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')}</th>\n            <th scope=\"col\">{app.translator.trans('gtdxyz-flarum-badges.forum.badge.description')}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {badges.map((badge) => {\n            return (\n              <tr>\n                <td>\n                  <Link href={app.route('badges.detail', { id: badge.id() })}>\n                    <UserBadge badge={badge} tooltip={false} />\n                  </Link>\n                </td>\n                <td>\n                  {badge.description()}\n\n                  <div className={'BadgeTableRewarded'}>\n                    {app.translator.trans('gtdxyz-flarum-badges.forum.badge.earned_count', {\n                      count: badge.earnedAmount(),\n                    })}\n                  </div>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import Component from 'flarum/common/Component';\nimport Link from 'flarum/components/Link';\nimport UserBadge from '../../../common/components/UserBadge';\n\nexport default class BlockListView extends Component {\n  view() {\n    if (!this.attrs.badges) {\n      return null;\n    }\n\n    const badges = this.attrs.badges;\n\n    return (\n      <ul className={'BadgeCategoryList'}>\n        {badges.map((badge) => {\n          return (\n            <li>\n              <Link href={app.route('badges.detail', { id: badge.id() })} className={'BadgeContainer'}>\n                <div className={'BadgeContainerInfo'}>\n                  <UserBadge badge={badge} tooltip={false} />\n\n                  {/* <p className={'BadgeDescription'}>{badge.description()}</p> */}\n\n                  {app.forum.attribute('canViewDetailedBadgeUsers') && (\n                    <p>\n                      {app.translator.trans('gtdxyz-flarum-badges.forum.badge.earned_count', {\n                        count: badge.earnedAmount(),\n                      })}\n                    </p>\n                  )}\n                </div>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n","import Page from 'flarum/components/Page';\nimport IndexPage from 'flarum/components/IndexPage';\nimport listItems from 'flarum/common/helpers/listItems';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport TableView from './View/TableView';\nimport BlockListView from './View/BlockListView';\n\nexport default class BadgesPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.bodyClass = 'App--index';\n\n    this.loading = true;\n\n    app.history.push('badges');\n\n    app.setTitle(app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges'));\n\n    // Load badge categories\n    app.store.find('badge-categories').then(() => {\n      this.loading = false;\n      m.redraw();\n    });\n  }\n\n  view() {\n    const categories = app.store.all('badgeCategories').sort((a, b) => a.order() - b.order());\n\n    return (\n      <div className=\"IndexPage\">\n        {/* {IndexPage.prototype.hero()} */}\n\n        <div className=\"container\">\n          <div className=\"sideNavContainer\">\n            <nav className=\"IndexPage-nav sideNav\">\n              <ul>{listItems(IndexPage.prototype.sidebarItems().toArray())}</ul>\n            </nav>\n            <div className=\"IndexPage-results sideNavOffset\">\n              <h2 className={'BadgeOverviewTitle'}>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')}</h2>\n\n              {this.loading && <LoadingIndicator size={'large'} />}\n\n              {!this.loading &&\n                categories.map((category) => {\n                  const badges = category.badges().sort((a, b) => a.order() - b.order());\n                  if (badges.length > 0) {\n                    return (\n                      <div className={'BadgeCategory'}>\n                        <h3>{category.name()}</h3>\n                        {category.description() && <p>{category.description()}</p>}\n\n                        {category.isTable() && <TableView badges={badges} />}\n\n                        {!category.isTable() && <BlockListView badges={badges} />}\n                      </div>\n                    );\n                  }\n                })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/humanTime'];","import Component from 'flarum/common/Component';\nimport Button from 'flarum/components/Button';\nimport Link from 'flarum/components/Link';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport avatar from 'flarum/helpers/avatar';\nimport humanTime from 'flarum/helpers/humanTime';\n\nexport default class BadgeDetailContent extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Load articles\n    this.attrs.state.refreshParams({\n      filter: {\n        badge: this.attrs.badgeId,\n      },\n      sort: '-assignedAt',\n    });\n  }\n\n  view() {\n    const state = this.attrs.state;\n\n    let loading = null;\n\n    if (state.isInitialLoading() || state.isLoadingNext()) {\n      loading = LoadingIndicator.component({\n        size: 'large',\n      });\n    } else if (state.hasNext()) {\n      loading = Button.component(\n        {\n          className: 'Button',\n          icon: 'fas fa-chevron-down',\n          onclick: state.loadNext.bind(state),\n        },\n        app.translator.trans('core.forum.discussion_list.load_more_button')\n      );\n    }\n\n    // No items\n    if (state.isInitialLoading() && state.isEmpty()) {\n      return <LoadingIndicator />;\n    }\n\n    // No items\n    if (state.isEmpty()) {\n      return <div className={'BadgeDetailContent-empty'}>{app.translator.trans('gtdxyz-flarum-badges.forum.no_received')}</div>;\n    }\n\n    return (\n      <div>\n        <ul className={'BadgeDetailContent'}>\n          {state.getPages().map((pg) => {\n            return pg.items.map((userBadge) => {\n              return (\n                <li>\n                  <Link\n                    href={app.route('user', {\n                      username: userBadge.user().username(),\n                    })}\n                    className={'BadgeDetailContent-user'}\n                  >\n                    {avatar(userBadge.user())}\n\n                    <div className={'BadgeDetailContentuserinfo'}>\n                      <h4>{userBadge.user().displayName()}</h4>\n                      {/* <p>\n                        {app.translator.trans('gtdxyz-flarum-badges.forum.badge.received_on', {\n                          date: humanTime(userBadge.assignedAt()),\n                        })}\n                      </p> */}\n                    </div>\n                  </Link>\n                </li>\n              );\n            });\n          })}\n        </ul>\n\n        {loading && <div className=\"SupportSearchList-loadMore\">{loading}</div>}\n      </div>\n    );\n  }\n}\n","import Page from 'flarum/components/Page';\nimport IndexPage from 'flarum/components/IndexPage';\nimport listItems from 'flarum/common/helpers/listItems';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport LinkButton from 'flarum/components/LinkButton';\nimport BadgeDetailContent from './BadgeDetailContent';\n\nimport UserBadge from '../../common/components/UserBadge';\n\nexport default class BadgeDetailPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.bodyClass = 'App--index';\n\n    const found = app.store.getById('badges', m.route.param('id'));\n\n    this.loading = !found;\n\n    if (!found) {\n      // Load badge categories\n      app.store.find(`badges/${m.route.param('id')}`).then((badge) => {\n        this.loading = false;\n\n        app.history.push('badgeDetailPage', badge.name());\n\n        this.setTitle(badge);\n\n        m.redraw();\n      });\n    } else {\n      app.history.push('badgeDetailPage', found.name());\n\n      this.setTitle(found);\n    }\n  }\n\n  setTitle(badge) {\n    app.setTitle(`${badge.name()} - ${app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')}`);\n  }\n\n  view() {\n    const badge = app.store.getById('badges', m.route.param('id'));\n\n    return (\n      <div className=\"IndexPage\">\n        {/* {IndexPage.prototype.hero()} */}\n\n        <div className=\"container\">\n          <div className=\"sideNavContainer\">\n            <nav className=\"IndexPage-nav sideNav\">\n              <ul>{listItems(IndexPage.prototype.sidebarItems().toArray())}</ul>\n            </nav>\n            <div className=\"IndexPage-results sideNavOffset\">\n              <LinkButton href={app.route('badges')} icon={'fas fa-chevron-left'} className={'Button BadgesOverviewButton'}>\n                {app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')}\n              </LinkButton>\n\n              {this.loading && <LoadingIndicator size={'large'} />}\n\n              {!this.loading && (\n                <div className={'BadgeDetailContent-Info'}>\n                  <UserBadge badge={badge} tooltip={false} />\n\n                  <div className={'BadgeDetailContent-Info-meta'}>\n                    <h3>{badge.name()}</h3>\n                    <p>{badge.description()}</p>\n                  </div>\n                </div>\n              )}\n\n              {badge && app.forum.attribute('canViewDetailedBadgeUsers') && (\n                <h3>\n                  {app.translator.trans('gtdxyz-flarum-badges.forum.badge.earned_by_count', {\n                    count: badge.earnedAmount(),\n                  })}\n                </h3>\n              )}\n\n              {!this.loading && app.forum.attribute('canViewDetailedBadgeUsers') && (\n                <BadgeDetailContent state={app.badgeUserListState} badgeId={badge.id()} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/states/PaginatedListState'];","import PaginatedListState from 'flarum/common/states/PaginatedListState';\n\nexport default class BadgeUsersState extends PaginatedListState {\n  constructor(params, page = 1) {\n    super(params, page, 18);\n  }\n\n  get type() {\n    return 'user-badges';\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Notification'];","import Notification from 'flarum/forum/components/Notification';\n\nexport default class BadgeReceivedNotification extends Notification {\n  icon() {\n    return '';\n  }\n\n  href() {\n    return app.route('user.badges', {\n      username: app.session.user.username(),\n    });\n  }\n\n  content() {\n    return app.translator.trans('gtdxyz-flarum-badges.forum.notification.title');\n  }\n\n  excerpt() {\n    const subject = this.attrs.notification.subject();\n\n    return (\n      <div>\n        <i className={`icon ${subject.attribute('icon')}`} />\n\n        {subject.attribute('name')}\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/NotificationGrid'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserCard'];","import Component from 'flarum/common/Component';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nexport default class UserCardBadge extends Component {\n  view() {\n    const item = this.attrs.badge;\n    const tooltip = this.attrs.tooltip !== false;\n    const forceVisibility = this.attrs.forceVisibility === true;\n\n    // Hide badge when not enabled\n    if (!item.isVisible && !forceVisibility) {\n      return null;\n    }\n\n    // Just show badge\n    if (tooltip === false) return this.badge();\n\n    return <Tooltip text={`${item.description ? item.description : ''}`}>{this.badge(item, forceVisibility)}</Tooltip>;\n  }\n\n  badge(item, forceVisibility) {\n    const isPartlyHidden = !item.isVisible && forceVisibility;\n\n    // This badge is an image\n    if (item.image) {\n      return (\n        <img\n          src={item.image}\n          className={'UserBadgeImage'}\n          onclick={() => {\n            if (this.attrs.onclick) {\n              this.attrs.onclick();\n            }\n          }}\n          style={{\n            opacity: isPartlyHidden ? 0.5 : undefined,\n          }}\n        />\n      );\n    }\n\n    return (\n      <span\n        className={`UserBadge UserBadge-${item.id}`}\n        onclick={() => {\n          if (this.attrs.onclick) {\n            this.attrs.onclick();\n          }\n        }}\n        style={{\n          backgroundColor: item.backgroundColor,\n          color: item.labelColor,\n          borderColor: item.backgroundColor,\n          opacity: isPartlyHidden ? 0.5 : undefined,\n        }}\n      >\n        <i className={item.icon} style={{ color: item.iconColor }} /> {item.name}\n      </span>\n    );\n  }\n}\n","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport type dayjs from 'dayjs';\nimport ItemList from 'flarum/utils/ItemList';\nimport LinkButton from 'flarum/components/LinkButton';\nimport hextorgba from '../utils/hextorgba';\n\nexport default class UserCardBadgeModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.loading = false;\n    this.badgeItem = this.attrs.badge;\n    this.badgeData = this.attrs.badgeData;\n  }\n\n  className() {\n    return 'Modal--small BadgeModal BadgeModal-plain';\n  }\n\n  title() {\n    // return app.translator.trans('gtdxyz-flarum-badges.forum.badge_information');\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">{this.data().toArray()}</div>\n        <div className=\"Modal-footer\">\n          {/* detail button */}\n          <LinkButton\n            href={app.route('badges.detail', {\n              id: this.badgeItem.id,\n            })}\n            className={'Button'}\n            style={{\n              margin: '0 10px',\n            }}\n          >\n            {app.translator.trans('gtdxyz-flarum-badges.forum.badge.badge_details')}\n          </LinkButton>\n\n          {/* remove button */}\n          {this.badgeData && app.forum.attribute('canGiveBadge') && (\n            <Button\n              className={'Button Button--primary'}\n              onclick={() => {\n                if (confirm(app.translator.trans('gtdxyz-flarum-badges.forum.moderation.remove_badge_confirm'))) {\n                  this.loading = true;\n                  const that = this;\n                  // this.badgeData.delete().then(() => this.hide());\n\n                  app\n                    .request({\n                      method: 'DELETE',\n                      url: app.forum.attribute('apiUrl') + '/user-badges/' + this.badgeData.id,\n                      body: {},\n                    })\n                    .then(() => {\n                      that.hide();\n                    });\n                }\n              }}\n              loading={this.loading}\n            >\n              {app.translator.trans('gtdxyz-flarum-badges.forum.moderation.remove_badge')}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  data() {\n    const items = new ItemList();\n    const radials = hextorgba(this.badgeItem.background_color, 0.7);\n    const radiale = hextorgba(this.badgeItem.background_color, 1);\n\n    // Badge name\n    items.add(\n      'name',\n      <div\n        className={'BadgeModalListItem name'}\n        style={{\n          background: 'radial-gradient(' + radials + ',' + radiale + ')',\n        }}\n      >\n        {this.badgeItem.image ? (\n          <img src={this.badgeItem.image} className=\"icon\" />\n        ) : (\n          <i className={this.badgeItem.icon} style={'color:' + this.badgeItem.icon_color}></i>\n        )}\n      </div>\n    );\n\n    // Badge description\n    items.add(\n      'description',\n      <div className={'BadgeModalListItem description'}>\n        <p className=\"name\">{this.badgeItem.name}</p>\n        <p>{this.badgeItem.description}</p>\n      </div>\n    );\n\n    // // Badge category\n    // if (this.badgeItem) {\n    //   items.add(\n    //     'category',\n    //     <div className={'BadgeModalListItem category'}>\n    //       <p>\n    //         {this.badgeItem.category && this.badgeItem.category.name}\n\n    //         {/* Uncategorized */}\n    //         {!this.badgeItem.category && app.translator.trans('gtdxyz-flarum-badges.forum.uncategorized')}\n    //         {/* <Link\n    //           href={app.route(\"badges.category\", {\n    //             category: this.badgeItem.category.id,\n    //           })}\n    //         >\n    //           {app.translator.trans(\n    //             \"gtdxyz-flarum-badges.forum.all_badges\"\n    //           )}\n    //         </Link> */}\n    //       </p>\n    //     </div>\n    //   );\n    // }\n\n    // Badge earned on\n    if (this.badgeData) {\n      const earned_at = dayjs(this.badgeData.assigned_at).format('YYYY-MM-DD');\n      items.add(\n        'earned_date',\n        <div className={'BadgeModalListItem earned-on'}>\n          <p>{earned_at}</p>\n        </div>\n      );\n    }\n\n    return items;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Switch'];","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport ItemList from 'flarum/utils/ItemList';\nimport Switch from 'flarum/components/Switch';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nimport UserBadge from '../../common/components/UserBadge';\n\nexport default class SelectUserCardBadgesModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.loading = false;\n\n    this.limit = app.forum.attribute('numberOfBadgesOnUserCard');\n    // this.selectedBadges = this.attrs.user.attribute('badges');\n\n    this.selectedBadges = this.attrs.user\n      .attribute('badges')\n      .filter((item) => item.in_uer_card != 0)\n      .map((item) => item.id);\n\n    app.userBadges.load(this.attrs.user.attribute('username'));\n  }\n\n  className() {\n    return 'Modal--big UserCardBadgesModal';\n  }\n\n  title() {\n    return app.translator.trans('gtdxyz-flarum-badges.forum.badges_in_card.title');\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">{this.data().toArray()}</div>\n        <div className=\"Modal-footer\">\n          <Button className={'Button Button--primary'} onclick={() => this.save()} loading={this.loading}>\n            {app.translator.trans('gtdxyz-flarum-badges.forum.save_changes')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  data() {\n    const items = new ItemList();\n    const badgesList = app.userBadges.cache || [];\n\n    // const categories = categorizeUserBadges(badgesList);\n\n    // Badge name\n    items.add(\n      'info',\n      <div className={'BadgeModalListItem'}>\n        <p>{app.translator.trans('gtdxyz-flarum-badges.forum.badges_in_card.description')}</p>\n        <p>\n          {app.translator.trans('gtdxyz-flarum-badges.forum.badges_in_card.select_limit', {\n            limit: app.forum.attribute('numberOfBadgesOnUserCard'),\n          })}\n        </p>\n      </div>\n    );\n\n    // Loop through all badge categories\n\n    items.add(\n      'badge-list',\n      <div className={'UserCardBadgesModalCategory'}>\n        {/* Loop through the badges */}\n        {badgesList\n          // .sort((a, b) => a.badge().order - b.badge().order)\n          .map((ubItem) => {\n            const ubItemId = parseInt(ubItem.id());\n            const disabled = this.selectedBadges.length >= this.limit && this.selectedBadges.indexOf(ubItemId) === -1;\n\n            return (\n              <Tooltip\n                text={\n                  disabled\n                    ? app.translator.trans('gtdxyz-flarum-badges.forum.badges_in_card.hit_limit', {\n                        limit: app.forum.attribute('numberOfBadgesOnUserCard'),\n                      })\n                    : ''\n                }\n                position=\"bottom\"\n              >\n                <div\n                  className={'UserCardBadgesModalCategory-badge'}\n                  onclick={() => {\n                    if (disabled) {\n                      return;\n                    }\n\n                    const currentIndex = this.selectedBadges.indexOf(ubItemId);\n\n                    // Remove from selected list\n                    if (currentIndex >= 0) {\n                      this.selectedBadges.splice(currentIndex, 1);\n                    } else {\n                      // Add to list\n                      this.selectedBadges.push(ubItemId);\n                    }\n                  }}\n                >\n                  <div className={'UserCardBadgesModalCategory-badge-preview'}>\n                    <UserBadge badge={ubItem.badge()} onclick={() => {}} />\n                    {ubItem.badge().image() && <div className=\"preview-name\">{ubItem.badge().name()}</div>}\n                  </div>\n\n                  <div className={'UserCardBadgesModalCategory-badge-switch'}>\n                    {Switch.component({\n                      state: this.selectedBadges.indexOf(ubItemId) >= 0,\n                      disabled,\n                    })}\n                  </div>\n                </div>\n              </Tooltip>\n            );\n          })}\n      </div>\n    );\n\n    return items;\n  }\n\n  save() {\n    this.loading = true;\n\n    this.attrs.user\n      .save({ userCardBadges: this.selectedBadges })\n      .then(() => {\n        // Update current user badges store\n\n        // this.attrs.user.attribute('badges').map((badgeItem) => {\n        //   badgeItem.in_user_card = this.selectedBadges.indexOf(parseInt(badgeItem.id)) >= 0;\n        // });\n\n        this.hide();\n      })\n      .catch(() => {})\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/DiscussionListState'];","export default class UserBadgesState {\n  constructor(app) {\n    this.app = app;\n\n    /**\n     * Whether or not the list are loading.\n     *\n     * @type {Boolean}\n     */\n    this.loading = false;\n  }\n\n  /**\n   * Load list into the application's cache if they haven't already\n   * been loaded.\n   */\n  load(username) {\n    // if online cross 24H\n    if (this.cache) {\n      return;\n    }\n\n    this.loading = true;\n    m.redraw();\n\n    this.app.store\n      .find('user-badges', {\n        filter: { user: username },\n      })\n      .then((badges) => {\n        this.cache = badges;\n      })\n      .catch(() => {})\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/extend';\nimport Model from 'flarum/Model';\nimport User from 'flarum/models/User';\nimport UserPage from 'flarum/components/UserPage';\nimport UserControls from 'flarum/utils/UserControls';\nimport LinkButton from 'flarum/components/LinkButton';\nimport Button from 'flarum/components/Button';\nimport Badge from '../common/models/Badge';\nimport BadgeCategory from '../common/models/BadgeCategory';\nimport UserBadge from '../common/models/UserBadge';\nimport UserBadgesPage from './components/UserBadgesPage';\nimport BadgesPage from './components/BadgesPage';\nimport BadgeDetailPage from './components/BadgeDetailPage';\nimport GiveBadgeModal from './components/GiveBadgeModal';\nimport addSidebarNav from './addSidebarNav';\nimport BadgeUsersState from './states/BadgeUsersState';\nimport BadgeReceivedNotification from './notification/BadgeReceivedNotification';\nimport NotificationGrid from 'flarum/forum/components/NotificationGrid';\nimport addBadgesToUserCard from './addBadgesToUserCard';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport UserBadgesState from './states/UserBadgesState';\n\napp.initializers.add('gtdxyz-flarum-badges', () => {\n  app.store.models.badges = Badge;\n  app.store.models.badgeCategories = BadgeCategory;\n\n  UserBadge.prototype.badge = Model.hasOne('badge');\n  app.store.models.userBadges = UserBadge;\n  User.prototype.userBadges = Model.hasMany('userBadges');\n\n  // User.prototype.userPrimaryBadge = Model.hasOne('userPrimaryBadge');\n\n  app.userBadges = new UserBadgesState(app);\n\n  // Add user badges to the user profile\n  app.routes['user.badges'] = {\n    path: '/u/:username/badges',\n    component: UserBadgesPage,\n  };\n\n  // Badges overview page\n  app.routes.badges = {\n    path: '/badges',\n    component: BadgesPage,\n  };\n\n  // Future\n  // // Badges overview page\n  // app.routes[\"badges.category\"] = {\n  //   path: \"/badges/category/:id\",\n  //   component: BadgesPage,\n  // };\n\n  // Badge detail page\n  app.routes['badges.detail'] = {\n    path: '/badges/:id',\n    component: BadgeDetailPage,\n  };\n\n  addSidebarNav();\n\n  app.badgeUserListState = new BadgeUsersState({});\n\n  // Badge received notification\n  app.notificationComponents.badgeReceived = BadgeReceivedNotification;\n\n  // Enable badge notifications?\n  extend(NotificationGrid.prototype, 'notificationTypes', function (items) {\n    items.add('badgeReceived', {\n      name: 'badgeReceived',\n      icon: 'fas fa-user-tag',\n      label: app.translator.trans('gtdxyz-flarum-badges.forum.notification.settings'),\n    });\n  });\n\n  // Add uploads to user page menu items\n  extend(UserPage.prototype, 'navItems', function (items) {\n    if (!app.session.user) {\n      return;\n    }\n    items.add(\n      'badges',\n      LinkButton.component(\n        {\n          href: app.route('user.badges', {\n            username: this.user.username(),\n          }),\n          name: 'badges',\n          icon: 'fas fa-user-tag',\n        },\n        [app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')]\n      ),\n      15\n    );\n  });\n\n  extend(UserControls, 'moderationControls', function (items, user) {\n    // User can give badges\n    if (app.forum.attribute('canGiveBadge')) {\n      items.add(\n        'test',\n        <Button\n          icon=\"fas fa-user-tag\"\n          onclick={() =>\n            app.modal.show(GiveBadgeModal, {\n              user: user,\n            })\n          }\n        >\n          {app.translator.trans('gtdxyz-flarum-badges.forum.give_badge')}\n        </Button>\n      );\n    }\n  });\n\n  addBadgesToUserCard();\n\n  // For what???\n  // extend(DiscussionListState.prototype, 'requestParams', function (params) {\n  //   if (typeof params.include === 'string') {\n  //     params.include = [params.include];\n  //   } else {\n  //     params.include?.push('user.userBadges', 'user.userBadges.badge');\n  //   }\n  // });\n});\n","import { extend } from 'flarum/extend';\nimport IndexPage from 'flarum/components/IndexPage';\nimport LinkButton from 'flarum/components/LinkButton';\n\nexport default function addSidebarNav() {\n  extend(IndexPage.prototype, 'navItems', function (items) {\n    items.add(\n      'badges',\n      <LinkButton icon=\"fas fa-id-badge\" href={app.route('badges')}>\n        {app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')}\n      </LinkButton>,\n      15\n    );\n\n    return items;\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport UserCard from 'flarum/forum/components/UserCard';\nimport Link from 'flarum/common/components/Link';\nimport UserCardBadge from './components/UserCardBadge';\nimport UserCardBadgeModal from './components/UserCardBadgeModal';\nimport SelectUserCardBadgesModal from './components/SelectUserCardBadgesModal';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nexport default function addBadgesToUserCard() {\n  extend(UserCard.prototype, 'infoItems', function (items) {\n    // Get user\n    const user = this.attrs.user;\n\n    // Don't show badges\n    if (!app.forum.attribute('showBadgesOnUserCard') || !user.attribute('badges')) return;\n\n    const visibleBadges = user.attribute('badges') ?? [];\n\n    // No badges to show\n    // if (visibleBadges.length < 1 || !visibleBadges) return;\n    if (user.attribute('badges_count') <= 0) return;\n\n    const limit = app.forum.attribute('numberOfBadgesOnUserCard');\n\n    const badges = [];\n\n    visibleBadges.forEach((badgeItem, indx) => {\n      badges.push(\n        <UserCardBadge\n          badge={badgeItem.badge}\n          onclick={() =>\n            app.modal.show(UserCardBadgeModal, {\n              badge: badgeItem.badge,\n              badgeData: badgeItem,\n            })\n          }\n        />\n      );\n    });\n\n    // Manage badges\n    if ((user.id() === app.session.user.id() && app.forum.attribute('editOwnUserCardBadges')) || app.forum.attribute('editUserCardBadges')) {\n      badges.push(\n        <Tooltip text={app.translator.trans('gtdxyz-flarum-badges.forum.badges_in_card.manage_badges')}>\n          <a\n            href={'#'}\n            className=\"UserBadge more-badges\"\n            onclick={(e) => {\n              e.preventDefault();\n              app.modal.show(SelectUserCardBadgesModal, { user: user });\n            }}\n          >\n            <i className={'fas fa-pencil-alt BadgeIconOnly'} />\n          </a>\n        </Tooltip>\n      );\n    }\n\n    items.add('badges', badges);\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","_setPrototypeOf","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","create","constructor","Badge","apiEndpoint","this","exists","data","id","mixin","Model","name","icon","order","image","description","isVisible","createdAt","earnedAmount","category","backgroundColor","iconColor","labelColor","BadgeCategory","isEnabled","isTable","users","badges","UserBadge","user","badge","isPrimary","assignedAt","inUserCard","oninit","vnode","tooltip","attrs","forceVisibility","displayName","view","text","isPartlyHidden","style","src","className","onclick","opacity","undefined","color","borderColor","Component","GiveBadgeModal","selectedBadge","userHasBadge","store","createRecord","Stream","userBadges","load","attribute","categories","uncategorizedBadges","loading","find","include","then","forEach","push","m","redraw","title","translator","trans","content","fields","toArray","type","disabled","items","ItemList","add","onchange","e","target","getById","checkUserHasBadge","values","map","label","length","class","placeholder","bidi","foundBadge","cache","userBadge","onsubmit","preventDefault","save","relationships","modal","show","BadgeModal","userBadgeData","hide","response","handleErrors","Modal","hextorgba","hexcolor","hexnumbers","replace","parseInt","slice","href","route","margin","forum","confirm","radials","radiale","background","earned_at","dayjs","format","UserBadgesContent","uncategorized","sortedCategories","keys","sort","b","categorizeUserBadges","UserBadgesPage","loadUser","param","size","session","component","UserPage","TableView","width","scope","count","BlockListView","BadgesPage","bodyClass","history","setTitle","all","listItems","IndexPage","Page","BadgeDetailContent","state","refreshParams","filter","badgeId","isInitialLoading","isLoadingNext","LoadingIndicator","hasNext","Button","loadNext","bind","isEmpty","getPages","pg","username","avatar","BadgeDetailPage","found","badgeUserListState","_defineProperties","props","i","descriptor","configurable","writable","BadgeUsersState","params","page","Constructor","protoProps","PaginatedListState","BadgeReceivedNotification","excerpt","subject","notification","Notification","UserCardBadge","item","UserCardBadgeModal","badgeItem","badgeData","that","request","method","url","body","background_color","icon_color","assigned_at","SelectUserCardBadgesModal","limit","selectedBadges","in_uer_card","badgesList","ubItem","ubItemId","indexOf","position","currentIndex","splice","Switch","userCardBadges","UserBadgesState","User","path","extend","NotificationGrid","LinkButton","UserControls","UserCard","visibleBadges","indx"],"sourceRoot":""}
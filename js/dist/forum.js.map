{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@gtdxyz/flarum-ext-badges/./src/common/components/UserBadge.tsx","webpack://@gtdxyz/flarum-ext-badges/./src/common/index.js","webpack://@gtdxyz/flarum-ext-badges/./src/common/models/Badge.js","webpack://@gtdxyz/flarum-ext-badges/./src/common/models/BadgeCategory.js","webpack://@gtdxyz/flarum-ext-badges/./src/common/models/UserBadge.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/addBadgesToUserCard.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/addSidebarNav.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/BadgeDetailContent.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/BadgeDetailPage.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/BadgeModal.tsx","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/BadgesPage.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/GiveBadgeModal.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/SelectUserCardBadgesModal.tsx","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/UserBadgesContent.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/UserBadgesPage.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/UserCardBadge.tsx","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/UserCardBadgeModal.tsx","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/View/BlockListView.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/View/TableView.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/index.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/notification/BadgeReceivedNotification.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/states/BadgeUsersState.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/states/UserBadgesState.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/utils/categorizeUserBadges.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/utils/hextorgba.ts","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['Model']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/Component']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/app']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/components/Link']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/extend']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/states/PaginatedListState']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Button']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/IndexPage']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Link']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/LinkButton']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Modal']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Page']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Select']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Switch']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/UserPage']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['extend']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['forum/app']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['forum/components/NotificationGrid']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['forum/components/UserCard']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['helpers/avatar']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['helpers/humanTime']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['models/User']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['utils/ItemList']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['utils/Stream']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['utils/UserControls']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['utils/mixin']\"","webpack://@gtdxyz/flarum-ext-badges/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://@gtdxyz/flarum-ext-badges/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@gtdxyz/flarum-ext-badges/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@gtdxyz/flarum-ext-badges/webpack/bootstrap","webpack://@gtdxyz/flarum-ext-badges/webpack/runtime/compat get default export","webpack://@gtdxyz/flarum-ext-badges/webpack/runtime/define property getters","webpack://@gtdxyz/flarum-ext-badges/webpack/runtime/hasOwnProperty shorthand","webpack://@gtdxyz/flarum-ext-badges/webpack/runtime/make namespace object","webpack://@gtdxyz/flarum-ext-badges/./forum.js"],"sourcesContent":["import Component from 'flarum/common/Component';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport BadgeModal from '../../forum/components/BadgeModal';\n\nexport default class UserBadge extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.tooltip = this.attrs.tooltip !== false;\n    this.forceVisibility = this.attrs.forceVisibility === true;\n    this.displayName = this.attrs.displayName === true;\n  }\n\n  view() {\n    // Hide badge when not enabled\n    if (!this.attrs.badge.isVisible() && !this.forceVisibility) {\n      return null;\n    }\n\n    // Just show badge\n    if (this.tooltip === false) return this.badge();\n\n    return <Tooltip text={`${this.attrs.badge.description() ? this.attrs.badge.description() : ''}`}>{this.badge()}</Tooltip>;\n  }\n\n  badge() {\n    const isPartlyHidden = !this.attrs.badge.isVisible() && this.forceVisibility;\n\n    // This badge is an image\n    if (this.attrs.badge.image()) {\n      return (\n        <view style={this.displayName ? (\"display:flex;justify-content:flex-start;align-items:center;\") : (\"display:inline-block;\")}>\n          <img\n            src={this.attrs.badge.image()}\n            className={'UserBadgeImage'}\n            onclick={() => {\n              if (this.attrs.onclick) {\n                this.attrs.onclick();\n              }\n            }}\n            style={{\n              opacity: isPartlyHidden ? 0.5 : undefined,\n            }}\n          />\n          {this.displayName && (\n            this.attrs.badge.name()\n          )}\n        </view>\n      );\n    }\n\n    return (\n      <span\n        className={`UserBadge UserBadge-${this.attrs.badge.id()}`}\n        onclick={() => {\n          if (this.attrs.onclick) {\n            this.attrs.onclick();\n          }\n        }}\n        style={{\n          backgroundColor: this.attrs.badge.backgroundColor(),\n          color: this.attrs.badge.labelColor(),\n          borderColor: this.attrs.badge.backgroundColor(),\n          opacity: isPartlyHidden ? 0.5 : undefined,\n        }}\n      >\n        <i className={this.attrs.badge.icon()} style={{ color: this.attrs.badge.iconColor() }} /> {this.attrs.badge.name()}\n      </span>\n    );\n  }\n}\n","import app from 'flarum/common/app';\n\napp.initializers.add('gtdxyz/flarum-user-badges', () => {\n  // console.log('[gtdxyz/flarum-user-badges] Hello, forum and admin!')\n});\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Badge extends mixin(Model, {\n  name: Model.attribute('name'),\n  icon: Model.attribute('icon'),\n  order: Model.attribute('order'),\n  image: Model.attribute('image'),\n  description: Model.attribute('description'),\n  isVisible: Model.attribute('isVisible'),\n  createdAt: Model.attribute('createdAt'),\n  earnedAmount: Model.attribute('earnedAmount'),\n  category: Model.hasOne('category'),\n  backgroundColor: Model.attribute('backgroundColor'),\n  iconColor: Model.attribute('iconColor'),\n  labelColor: Model.attribute('labelColor'),\n}) {\n  apiEndpoint() {\n    return '/badges' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class BadgeCategory extends mixin(Model, {\n  name: Model.attribute('name'),\n  order: Model.attribute('order'),\n  description: Model.attribute('description'),\n  isEnabled: Model.attribute('isEnabled'),\n  createdAt: Model.attribute('createdAt'),\n  isTable: Model.attribute('isTable'),\n  users: Model.hasMany('users'),\n  badges: Model.hasMany('badges'),\n}) {\n  apiEndpoint() {\n    return '/badge-categories' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class UserBadge extends mixin(Model, {\n  user: Model.hasOne('user'),\n  badge: Model.hasOne('badge'),\n  description: Model.attribute('description'),\n  isPrimary: Model.attribute('isPrimary'),\n  assignedAt: Model.attribute('assignedAt'),\n  inUserCard: Model.attribute('inUserCard'),\n}) {\n  apiEndpoint() {\n    return '/user-badges' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport UserCard from 'flarum/forum/components/UserCard';\nimport Link from 'flarum/common/components/Link';\nimport UserCardBadge from './components/UserCardBadge';\nimport UserCardBadgeModal from './components/UserCardBadgeModal';\nimport SelectUserCardBadgesModal from './components/SelectUserCardBadgesModal';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\n\nexport default function addBadgesToUserCard() {\n  \n  extend(UserCard.prototype, 'infoItems', function (items) {\n    \n    // Get user\n    const user = this.attrs.user;\n\n    // Don't show badges\n    if (!app.forum.attribute('showBadgesOnUserCard') || !user.attribute('badges')) return;\n\n    const visibleBadges = user.attribute('badges') ?? [];\n\n    // No badges to show\n    // if (visibleBadges.length < 1 || !visibleBadges) return;\n    if (user.attribute('badges_count') <= 0) return;\n\n    const limit = app.forum.attribute('numberOfBadgesOnUserCard');\n\n    const badges = visibleBadges.map((badgeItem) => {\n      return (\n        <UserCardBadge\n          badge={badgeItem.badge}\n          onclick={() =>\n            app.modal.show(UserCardBadgeModal, {\n              badge: badgeItem.badge,\n              badgeData: badgeItem,\n            })\n          }\n        />\n      );\n    });\n\n    // Manage badges\n    if ((user === app.session.user && app.forum.attribute('editOwnUserCardBadges')) || app.forum.attribute('editUserCardBadges')) {\n      badges.push(\n        <Tooltip text={app.translator.trans('gtdxyz-flarum-badges.forum.badges_in_card.manage_badges')}>\n          <a\n            href={'#'}\n            className=\"UserBadge more-badges\"\n            onclick={(e) => {\n              e.preventDefault();\n              app.modal.show(SelectUserCardBadgesModal, { user: user });\n            }}\n          >\n            <i className={'fas fa-pencil-alt BadgeIconOnly'} />\n          </a>\n        </Tooltip>\n      );\n    }\n    \n    items.add('badges', badges);\n  });\n}\n","import { extend } from 'flarum/extend';\nimport IndexPage from 'flarum/components/IndexPage';\nimport LinkButton from 'flarum/components/LinkButton';\n\nexport default function addSidebarNav() {\n  extend(IndexPage.prototype, 'navItems', function (items) {\n    items.add(\n      'badges',\n      <LinkButton icon=\"fas fa-id-badge\" href={app.route('badges')}>\n        {app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')}\n      </LinkButton>,\n      15\n    );\n\n    return items;\n  });\n}\n","import Component from 'flarum/common/Component';\nimport Button from 'flarum/components/Button';\nimport Link from 'flarum/components/Link';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport avatar from 'flarum/helpers/avatar';\nimport humanTime from 'flarum/helpers/humanTime';\n\nexport default class BadgeDetailContent extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n    \n    // Load articles\n    this.attrs.state.refreshParams({\n      filter: {\n        badge: this.attrs.badgeId,\n      },\n      sort: '-assignedAt',\n    });\n  }\n\n  view() {\n    const state = this.attrs.state;\n\n    let loading = null;\n\n    if (state.isInitialLoading() || state.isLoadingNext()) {\n      loading = LoadingIndicator.component({\n        size: 'large',\n      });\n    } else if (state.hasNext()) {\n      loading = Button.component(\n        {\n          className: 'Button',\n          icon: 'fas fa-chevron-down',\n          onclick: state.loadNext.bind(state),\n        },\n        app.translator.trans('core.forum.discussion_list.load_more_button')\n      );\n    }\n\n    // No items\n    if (state.isInitialLoading() && state.isEmpty()) {\n      return <LoadingIndicator />;\n    }\n\n    // No items\n    if (state.isEmpty()) {\n      return <div className={'BadgeDetailContent-empty'}>{app.translator.trans('gtdxyz-flarum-badges.forum.no_received')}</div>;\n    }\n\n    return (\n      <div>\n        <ul className={'BadgeDetailContent'}>\n          {state.getPages().map((pg) => {\n            return pg.items.map((userBadge) => {\n              return (\n                <li>\n                  <Link\n                    href={app.route('user', {\n                      username: userBadge.user().username(),\n                    })}\n                    className={'BadgeDetailContent-user'}\n                  >\n                    {avatar(userBadge.user())}\n\n                    <div className={'BadgeDetailContentuserinfo'}>\n                      <h4>{userBadge.user().displayName()}</h4>\n                      {/* <p>\n                        {app.translator.trans('gtdxyz-flarum-badges.forum.badge.received_on', {\n                          date: humanTime(userBadge.assignedAt()),\n                        })}\n                      </p> */}\n                    </div>\n                  </Link>\n                </li>\n              );\n            });\n          })}\n        </ul>\n\n        {loading && <div className=\"SupportSearchList-loadMore\">{loading}</div>}\n      </div>\n    );\n  }\n}\n","import Page from 'flarum/components/Page';\nimport IndexPage from 'flarum/components/IndexPage';\nimport listItems from 'flarum/common/helpers/listItems';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport LinkButton from 'flarum/components/LinkButton';\nimport BadgeDetailContent from './BadgeDetailContent';\n\nimport UserBadge from '../../common/components/UserBadge';\n\nexport default class BadgeDetailPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.bodyClass = 'App--index';\n\n    const found = app.store.getById('badges', m.route.param('id'));\n\n    this.loading = !found;\n\n    if (!found) {\n      // Load badge categories\n      app.store.find(`badges/${m.route.param('id')}`).then((badge) => {\n        this.loading = false;\n\n        app.history.push('badgeDetailPage', badge.name());\n\n        this.setTitle(badge);\n\n        m.redraw();\n      });\n    } else {\n      app.history.push('badgeDetailPage', found.name());\n\n      this.setTitle(found);\n    }\n  }\n\n  setTitle(badge) {\n    app.setTitle(`${badge.name()} - ${app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')}`);\n  }\n\n  view() {\n    const badge = app.store.getById('badges', m.route.param('id'));\n\n    return (\n      <div className=\"IndexPage\">\n        {/* {IndexPage.prototype.hero()} */}\n\n        <div className=\"container\">\n          <div className=\"sideNavContainer\">\n            <nav className=\"IndexPage-nav sideNav\">\n              <ul>{listItems(IndexPage.prototype.sidebarItems().toArray())}</ul>\n            </nav>\n            <div className=\"IndexPage-results sideNavOffset\">\n              {/* <LinkButton href={app.route('badges')} icon={'fas fa-chevron-left'} className={'Button BadgesOverviewButton'}>\n                {app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')}\n              </LinkButton> */}\n\n              {this.loading && <LoadingIndicator size={'large'} />}\n\n              {!this.loading && (\n                <div className={'BadgeDetailContent-Info'}>\n                  <UserBadge badge={badge} tooltip={false} />\n\n                  <div className={'BadgeDetailContent-Info-meta'}>\n                    <h3>{badge.name()}</h3>\n                    <p>{badge.description()}</p>\n                  </div>\n                </div>\n              )}\n\n              {badge && app.forum.attribute('canViewDetailedBadgeUsers') && (\n                <h3>\n                  {app.translator.trans('gtdxyz-flarum-badges.forum.badge.earned_by_count', {\n                    count: badge.earnedAmount(),\n                  })}\n                </h3>\n              )}\n\n              {!this.loading && app.forum.attribute('canViewDetailedBadgeUsers') && (\n                <BadgeDetailContent state={app.badgeUserListState} badgeId={badge.id()} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport type dayjs from 'dayjs';\nimport ItemList from 'flarum/utils/ItemList';\nimport LinkButton from 'flarum/components/LinkButton';\nimport GiveBadgeModal from './GiveBadgeModal';\nimport hextorgba from '../utils/hextorgba';\n\nexport default class BadgeModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.loading = false;\n  }\n\n  className() {\n    return 'Modal--small BadgeModal BadgeModal-plain';\n  }\n\n  title() {\n    // return app.translator.trans('gtdxyz-flarum-badges.forum.badge_information');\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">{this.data().toArray()}</div>\n        <div className=\"Modal-footer\">\n          <LinkButton\n            href={app.route('badges.detail', {\n              id: this.attrs.badge.id(),\n            })}\n            className={'Button'}\n            style={{\n              margin: '0 10px',\n            }}\n          >\n            {app.translator.trans('gtdxyz-flarum-badges.forum.badge.badge_details')}\n          </LinkButton>\n\n          {this.attrs.userBadgeData && app.forum.attribute('canGiveBadge') && (\n            <Button\n              className={'Button Button--primary'}\n              onclick={() => {\n                if (confirm(app.translator.trans('gtdxyz-flarum-badges.forum.moderation.remove_badge_confirm'))) {\n                  this.loading = true;\n                  this.attrs.userBadgeData.delete().then(() => this.hide());\n                }\n              }}\n              loading={this.loading}\n            >\n              {app.translator.trans('gtdxyz-flarum-badges.forum.moderation.remove_badge')}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  data() {\n    const items = new ItemList();\n    const radials = hextorgba(this.attrs.badge.backgroundColor(), 0.7);\n    const radiale = hextorgba(this.attrs.badge.backgroundColor(), 1);\n\n    // Badge name\n    items.add(\n      'name',\n      <div\n        className={'BadgeModalListItem name'}\n        style={{\n          background: \"radial-gradient(\"+radials+\",\"+radiale+\")\"\n        }}\n      >\n        {this.attrs.badge.image() && (\n          <img src={this.attrs.badge.image()} className=\"icon\" />\n        )}\n      </div>\n    );\n\n    // Badge description\n    items.add(\n      'description',\n      <div className={'BadgeModalListItem description'}>\n        <p className=\"name\">{this.attrs.badge.name()}</p>\n        <p>{this.attrs.badge.description()}</p>\n      </div>\n    );\n\n    \n\n    // Badge category\n    if (this.attrs.userBadgeData) {\n      items.add(\n        'category',\n        <div className={'BadgeModalListItem category'}>\n          {/* <p>\n            <b>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.category')}:</b>\n          </p> */}\n          <p>\n            {this.attrs.badge.category() && this.attrs.badge.category().name()}\n\n            {/* Uncategorized */}\n            {!this.attrs.badge.category() && app.translator.trans('gtdxyz-flarum-badges.forum.uncategorized')}\n            {/* <Link\n              href={app.route(\"badges.category\", {\n                category: this.attrs.badge.category().id(),\n              })}\n            >\n              {app.translator.trans(\n                \"gtdxyz-flarum-badges.forum.all_badges\"\n              )}\n            </Link> */}\n          </p>\n        </div>\n      );\n    }\n\n    // Badge amount\n    // if (this.attrs.badge && this.attrs.badge.earnedAmount()) {\n    //   items.add(\n    //     'earned_amount',\n    //     <div className={'BadgeModalListItem'}>\n    //       <p>\n    //         {app.translator.trans('gtdxyz-flarum-badges.forum.badge.earned_count', {\n    //           count: this.attrs.badge.earnedAmount(),\n    //         })}\n    //       </p>\n    //     </div>\n    //   );\n    // }\n\n    // Badge earned on\n    if (this.attrs.userBadgeData) {\n      const earned_at = dayjs(this.attrs.userBadgeData.assignedAt()).format('YYYY-MM-DD');\n      items.add(\n        'earned_date',\n        <div className={'BadgeModalListItem earned-on'}>\n          <p>{earned_at}</p>\n        </div>\n      );\n    }\n\n    // Badge earning reason\n    const earning_reason = false;\n    if (earning_reason && this.attrs.userBadgeData && (this.attrs.userBadgeData.description() || app.forum.attribute('canGiveBadge'))) {\n      items.add(\n        'earning_reason',\n        <div className={'BadgeModalListItem'}>\n          <p>\n            <b>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.earning_reason')}:</b>\n          </p>\n\n          <p>\n            {this.attrs.userBadgeData.description() ? (\n              this.attrs.userBadgeData.description()\n            ) : (\n              <i>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.no_earning_reason')}</i>\n            )}\n          </p>\n          <p>\n            {app.forum.attribute('canGiveBadge') && (\n              <a\n                href={'#'}\n                onclick={(e) => {\n                  e.preventDefault();\n                  app.modal.show(GiveBadgeModal, {\n                    badge: this.attrs.userBadgeData,\n                  });\n                }}\n              >\n                {app.translator.trans('gtdxyz-flarum-badges.forum.badge.update_earning_reason')}\n              </a>\n            )}\n          </p>\n        </div>\n      );\n    }\n\n    return items;\n  }\n}\n","import Page from 'flarum/components/Page';\nimport IndexPage from 'flarum/components/IndexPage';\nimport listItems from 'flarum/common/helpers/listItems';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport TableView from './View/TableView';\nimport BlockListView from './View/BlockListView';\n\nexport default class BadgesPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.bodyClass = 'App--index';\n\n    this.loading = true;\n\n    app.history.push('badges');\n\n    app.setTitle(app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges'));\n\n    // Load badge categories\n    app.store.find('badge-categories').then(() => {\n      this.loading = false;\n      m.redraw();\n    });\n  }\n\n  view() {\n    const categories = app.store.all('badgeCategories').sort((a, b) => a.order() - b.order());\n\n    return (\n      <div className=\"IndexPage\">\n        {/* {IndexPage.prototype.hero()} */}\n\n        <div className=\"container\">\n          <div className=\"sideNavContainer\">\n            <nav className=\"IndexPage-nav sideNav\">\n              <ul>{listItems(IndexPage.prototype.sidebarItems().toArray())}</ul>\n            </nav>\n            <div className=\"IndexPage-results sideNavOffset\">\n              <h2 className={'BadgeOverviewTitle'}>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')}</h2>\n\n              {this.loading && <LoadingIndicator size={'large'} />}\n\n              {!this.loading &&\n                categories.map((category) => {\n                  const badges = category.badges().sort((a, b) => a.order() - b.order());\n                  if(badges.length > 0){\n                    return (\n                      <div className={'BadgeCategory'}>\n                        <h3>{category.name()}</h3>\n                        {category.description() && <p>{category.description()}</p>}\n  \n                        {category.isTable() && <TableView badges={badges} />}\n  \n                        {!category.isTable() && <BlockListView badges={badges} />}\n                      </div>\n                    );\n                  }\n                })\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport ItemList from 'flarum/utils/ItemList';\nimport Select from 'flarum/components/Select';\nimport Stream from 'flarum/utils/Stream';\nimport BadgeModal from './BadgeModal';\n\nexport default class GiveBadgeModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Select image\n    this.selectedBadge = this.attrs.badge ? this.attrs.badge.badge() : null;\n\n    // Current user\n    this.user = this.attrs.badge ? this.attrs.badge.user() : this.attrs.user;\n\n    // User has badge\n    this.userHasBadge = false;\n\n    // Badge model\n    this.badge = this.attrs.badge ? this.attrs.badge : app.store.createRecord('userBadges');\n\n    // Earning reason\n    this.description = Stream(this.badge.description());\n\n    app.userBadges.load(this.user.attribute('username'));\n\n    // List of available bagges\n    this.categories = {};\n\n    this.uncategorizedBadges = [];\n\n    this.loading = false;\n\n    // Load all available badges\n    if (!this.attrs.badge) {\n      this.loading = true;\n\n      app.store\n        .find('badges', {\n          include: 'category',\n        })\n        .then((badges) => {\n          badges.forEach((badge) => {\n            // Categorized\n            if (badge.category()) {\n              const category = badge.category();\n\n              if (!this.categories[category.id()]) {\n                this.categories[category.id()] = {\n                  category,\n                  badges: [badge],\n                };\n              } else {\n                this.categories[category.id()].badges.push(badge);\n              }\n            }\n            // Uncategorized\n            else {\n              this.uncategorizedBadges.push(badge);\n            }\n          });\n\n          this.loading = false;\n\n          // Redraw\n          m.redraw();\n        });\n    }\n  }\n\n  className() {\n    return 'Modal--small BadgeModal';\n  }\n\n  title() {\n    return app.translator.trans(`gtdxyz-flarum-badges.forum.${this.badge.exists ? 'update' : 'give'}_badge`);\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">\n          <div className=\"Form\">{this.fields().toArray()}</div>\n        </div>\n\n        <div className=\"Modal-footer\">\n          <Button className={'Button Button--primary'} type={'submit'} loading={this.loading} disabled={this.userHasBadge}>\n            {app.translator.trans('core.forum.composer_edit.submit_button')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    // Badge selector\n    items.add(\n      'badge',\n      <div className=\"BadgeModalListItem\">\n        <p>\n          <b>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.badge')}</b>\n        </p>\n\n        <div className={'Select'}>\n          <select\n            value={this.selectedBadge ? this.selectedBadge.id() : 'empty'}\n            disabled={!!this.attrs.badge}\n            onchange={(e) => {\n              if (e.target.value === 'empty') return;\n              this.selectedBadge = app.store.getById('badges', e.target.value);\n\n              // Check if the user already has this badge\n              this.checkUserHasBadge(this.selectedBadge);\n            }}\n            className=\"Select-input FormControl\"\n          >\n            <option value={'empty'}>{app.translator.trans('gtdxyz-flarum-badges.forum.select_badge')}</option>\n\n            {/* When no badge is selected, show all available badges */}\n            {!this.attrs.badge &&\n              Object.values(this.categories).map(({ category, badges }) => (\n                <optgroup label={category.name()}>\n                  {badges.map((badge) => (\n                    <option value={badge.id()}>{badge.name()}</option>\n                  ))}\n                </optgroup>\n              ))}\n\n            {!this.attrs.badge && this.uncategorizedBadges.length >= 1 && (\n              <optgroup label={app.translator.trans('gtdxyz-flarum-badges.forum.uncategorized')}>\n                {this.uncategorizedBadges.map((badge) => (\n                  <option value={badge.id()}>{badge.name()}</option>\n                ))}\n              </optgroup>\n            )}\n\n            {/* When a badge is already assigned */}\n            {!!this.attrs.badge && <option value={this.selectedBadge.id()}>{this.selectedBadge.name()}</option>}\n          </select>\n          <i class=\"icon fas fa-caret-down Select-caret\"></i>\n        </div>\n\n        {this.userHasBadge && <p className={'UserHasBadge'}>{app.translator.trans('gtdxyz-flarum-badges.forum.user_has_badge')}</p>}\n      </div>,\n      30\n    );\n\n    // Badge description\n    items.add(\n      'badge_description',\n      <div className={'BadgeModalListItem'}>\n        {/* <p>\n          <b>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.description')}:</b>\n        </p> */}\n        <p>{this.selectedBadge ? this.selectedBadge.description() : app.translator.trans('gtdxyz-flarum-badges.forum.select_badge')}</p>\n      </div>,\n      30\n    );\n\n    // Badge earning reason\n    items.add(\n      'description',\n      <div className=\"BadgeModalListItem\">\n        <p>\n          <b>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.earning_reason')}</b>\n        </p>\n        <textarea\n          className=\"FormControl\"\n          placeholder={app.translator.trans('gtdxyz-flarum-badges.forum.badge.earning_reason')}\n          bidi={this.description}\n        />\n      </div>,\n      30\n    );\n\n    return items;\n  }\n\n  checkUserHasBadge(badge) {\n    let foundBadge = false;\n\n    let currentBadges = app.userBadges.cache || [];\n\n    currentBadges.map((userBadge) => {\n      if (userBadge.badge() == badge) {\n        foundBadge = true;\n      }\n    });\n\n    this.userHasBadge = foundBadge;\n\n    m.redraw();\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    this.badge\n      .save({\n        description: this.description(),\n        relationships: this.attrs.badge\n          ? {}\n          : {\n              badge: this.selectedBadge,\n              user: this.user,\n            },\n      })\n      .then(\n        () => {\n          // Re-open badge modal\n          if (this.attrs.badge) {\n            app.modal.show(BadgeModal, {\n              badge: this.attrs.badge.badge(),\n              userBadgeData: this.attrs.badge,\n            });\n          } else {\n            this.hide();\n          }\n\n          m.redraw();\n        },\n        (response) => {\n          this.loading = false;\n          this.handleErrors(response);\n        }\n      );\n  }\n}\n","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport ItemList from 'flarum/utils/ItemList';\nimport Switch from 'flarum/components/Switch';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nimport UserBadge from '../../common/components/UserBadge';\n\n\nexport default class SelectUserCardBadgesModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.loading = false;\n\n    this.limit = app.forum.attribute('numberOfBadgesOnUserCard');\n    // this.selectedBadges = this.attrs.user.attribute('badges');\n\n    \n    this.selectedBadges = this.attrs.user.attribute('badges')\n      .filter((item) => item.in_uer_card!=0)\n      .map((item) => item.id);\n\n    app.userBadges.load(this.attrs.user.attribute('username'));\n    \n  }\n\n  className() {\n    return 'Modal--big UserCardBadgesModal';\n  }\n\n  title() {\n    return app.translator.trans('gtdxyz-flarum-badges.forum.badges_in_card.title');\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">{this.data().toArray()}</div>\n        <div className=\"Modal-footer\">\n          <Button className={'Button Button--primary'} onclick={() => this.save()} loading={this.loading}>\n            {app.translator.trans('gtdxyz-flarum-badges.forum.save_changes')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  data() {\n    const items = new ItemList();\n    const badgesList = app.userBadges.cache || [];\n\n    // const categories = categorizeUserBadges(badgesList);\n\n    // Badge name\n    items.add(\n      'info',\n      <div className={'BadgeModalListItem'}>\n        <p>{app.translator.trans('gtdxyz-flarum-badges.forum.badges_in_card.description')}</p>\n        <p>\n          {app.translator.trans('gtdxyz-flarum-badges.forum.badges_in_card.select_limit', {\n            limit: app.forum.attribute('numberOfBadgesOnUserCard'),\n          })}\n        </p>\n      </div>\n    );\n\n    // Loop through all badge categories\n    \n    items.add(\n      'badge-list',\n      <div className={'UserCardBadgesModalCategory'}>\n\n        {/* Loop through the badges */}\n        {badgesList\n          // .sort((a, b) => a.badge().order - b.badge().order)\n          .map((ubItem) => {\n            const ubItemId = parseInt(ubItem.id());\n            const disabled = this.selectedBadges.length >= this.limit && this.selectedBadges.indexOf(ubItemId) === -1;\n            \n            return (\n              <Tooltip\n                text={\n                  disabled\n                    ? app.translator.trans('gtdxyz-flarum-badges.forum.badges_in_card.hit_limit', {\n                        limit: app.forum.attribute('numberOfBadgesOnUserCard'),\n                      })\n                    : ''\n                }\n                position=\"bottom\"\n              >\n                <div\n                  className={'UserCardBadgesModalCategory-badge'}\n                  onclick={() => {\n                    if (disabled) {\n                      return;\n                    }\n\n                    const currentIndex = this.selectedBadges.indexOf(ubItemId);\n\n                    // Remove from selected list\n                    if (currentIndex >= 0) {\n                      this.selectedBadges.splice(currentIndex, 1);\n                    } else {\n                      // Add to list\n                      this.selectedBadges.push(ubItemId);\n                    }\n                  }}\n                >\n                  <div className={'UserCardBadgesModalCategory-badge-preview'}>\n                    <UserBadge badge={ubItem.badge()} onclick={() => {}} />\n                    <div className=\"preview-name\">{ubItem.badge().name()}</div>\n                  </div>\n                  \n                  <div className={'UserCardBadgesModalCategory-badge-switch'}>\n                    {Switch.component({\n                      state: this.selectedBadges.indexOf(ubItemId) >= 0,\n                      disabled,\n                    })}\n                  </div>\n\n                </div>\n              </Tooltip>\n            );\n          })}\n      </div>\n    );\n    \n\n    return items;\n  }\n\n  save() {\n    this.loading = true;\n\n    this.attrs.user\n      .save({ userCardBadges: this.selectedBadges })\n      .then(() => {\n        // Update current user badges store\n        \n        this.attrs.user.attribute('badges').map((badgeItem) => {\n          \n          badgeItem.in_user_card = this.selectedBadges.indexOf(parseInt(badgeItem.id)) >= 0;\n          // badgeItem.pushAttributes({\n          //   in_user_card: this.selectedBadges.indexOf(parseInt(badgeItem.id)) >= 0,\n          // });\n          \n        });\n        \n        this.hide();\n      })\n      .catch(() => {})\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","import Component from 'flarum/common/Component';\nimport UserBadge from '../../common/components/UserBadge';\nimport categorizeUserBadges from '../utils/categorizeUserBadges';\nimport BadgeModal from './BadgeModal';\n\nexport default class UserBadgesContent extends Component {\n  view() {\n    const badgesList = app.userBadges.cache || [];\n    \n    const categories = categorizeUserBadges(badgesList);\n\n    return (\n      <div className=\"UserBadges\">\n        {categories.length === 0 && (\n          <div className={'Placeholder'}>\n            <p>{app.translator.trans('gtdxyz-flarum-badges.forum.user_no_badges')}</p>\n          </div>\n        )}\n\n        {categories.length >= 1 &&\n          categories.map(({ name, category, badges }) => {\n            if (category && !category.isEnabled()) return null;\n\n            return (\n              <div className={'UserBadgesCategory'}>\n                <h3>{name}</h3>\n\n                {category && category.description() && <p>{category.description()}</p>}\n\n                {badges\n                  .sort((a, b) => a.badge().order() - b.badge().order())\n                  .map((userBadge) => (\n                    <UserBadge\n                      badge={userBadge.badge()}\n                      onclick={() =>\n                        app.modal.show(BadgeModal, {\n                          badge: userBadge.badge(),\n                          userBadgeData: userBadge,\n                        })\n                      }\n                    />\n                  ))}\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n}\n","import UserPage from 'flarum/components/UserPage';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport UserBadgesContent from './UserBadgesContent';\n\nexport default class UserBadgesPage extends UserPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.user = null;\n\n    this.loading = true;\n\n    this.loadUser(m.route.param('username'));\n    app.userBadges.load(m.route.param('username'));\n\n    \n  }\n\n  content() {\n    if (!this.user || this.loading) {\n      return <LoadingIndicator size={46} />;\n    }\n\n    if (app.session.user) {\n      return UserBadgesContent.component({\n        user: this.user\n      });\n    } else {\n      return (\n        <div className={'Placeholder'}>\n          <p>{app.translator.trans('gtdxyz-flarum-badges.forum.hidden_badges')}</p>\n        </div>\n      );\n    }\n  }\n\n  show(user) {\n    super.show(user);\n    this.user = user;\n\n    this.loading = false;\n\n    // app.store\n    //   .find('user-badges', {\n    //     filter: {user: this.user.username()}\n    //   })\n    //   .then(() => {\n    //     this.loading = false;\n    //     m.redraw();\n    //   });\n  }\n}\n","import Component from 'flarum/common/Component';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nexport default class UserCardBadge extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.tooltip = this.attrs.tooltip !== false;\n    this.forceVisibility = this.attrs.forceVisibility === true;\n\n    this.item = this.attrs.badge;\n  }\n\n  view() {\n    // Hide badge when not enabled\n    if (!this.item.isVisible && !this.forceVisibility) {\n      return null;\n    }\n\n    // Just show badge\n    if (this.tooltip === false) return this.badge();\n\n    return <Tooltip text={`${this.item.description ? this.item.description : ''}`}>{this.badge()}</Tooltip>;\n  }\n\n  badge() {\n    const isPartlyHidden = !this.item.isVisible && this.forceVisibility;\n\n    // This badge is an image\n    if (this.item.image) {\n      return (\n        <img\n          src={this.item.image}\n          className={'UserBadgeImage'}\n          onclick={() => {\n            if (this.attrs.onclick) {\n              this.attrs.onclick();\n            }\n          }}\n          style={{\n            opacity: isPartlyHidden ? 0.5 : undefined,\n          }}\n        />\n      );\n    }\n\n    return (\n      <span\n        className={`UserBadge UserBadge-${this.item.id}`}\n        onclick={() => {\n          if (this.attrs.onclick) {\n            this.attrs.onclick();\n          }\n        }}\n        style={{\n          backgroundColor: this.item.backgroundColor,\n          color: this.item.labelColor,\n          borderColor: this.item.backgroundColor,\n          opacity: isPartlyHidden ? 0.5 : undefined,\n        }}\n      >\n        <i className={this.item.icon} style={{ color: this.item.iconColor }} /> {this.item.name}\n      </span>\n    );\n  }\n}\n","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport type dayjs from 'dayjs';\nimport ItemList from 'flarum/utils/ItemList';\nimport LinkButton from 'flarum/components/LinkButton';\nimport hextorgba from '../utils/hextorgba';\n\nexport default class UserCardBadgeModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.loading = false;\n    this.badgeItem = this.attrs.badge;\n    this.badgeData = this.attrs.badgeData;\n  }\n\n  className() {\n    return 'Modal--small BadgeModal BadgeModal-plain';\n  }\n\n  title() {\n    // return app.translator.trans('gtdxyz-flarum-badges.forum.badge_information');\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">{this.data().toArray()}</div>\n        <div className=\"Modal-footer\">\n          {/* detail button */}\n          <LinkButton\n            href={app.route('badges.detail', {\n              id: this.badgeItem.id,\n            })}\n            className={'Button'}\n            style={{\n              margin: '0 10px',\n            }}\n          >\n            {app.translator.trans('gtdxyz-flarum-badges.forum.badge.badge_details')}\n          </LinkButton>\n          \n          {/* remove button */}\n          {this.badgeData && app.forum.attribute('canGiveBadge') && (\n            <Button\n              className={'Button Button--primary'}\n              onclick={() => {\n                if (confirm(app.translator.trans('gtdxyz-flarum-badges.forum.moderation.remove_badge_confirm'))) {\n                  this.loading = true;\n                  this.badgeData.delete().then(() => this.hide());\n                }\n              }}\n              loading={this.loading}\n            >\n              {app.translator.trans('gtdxyz-flarum-badges.forum.moderation.remove_badge')}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  data() {\n    const items = new ItemList();\n    const radials = hextorgba(this.badgeItem.background_color, 0.7);\n    const radiale = hextorgba(this.badgeItem.background_color, 1);\n\n    // Badge name\n    items.add(\n      'name',\n      <div\n        className={'BadgeModalListItem name'}\n        style={{\n          background: \"radial-gradient(\"+radials+\",\"+radiale+\")\"\n        }}\n      >\n        {this.badgeItem.image && (\n          <img src={this.badgeItem.image} className=\"icon\" />\n        )}\n      </div>\n    );\n\n    // Badge description\n    items.add(\n      'description',\n      <div className={'BadgeModalListItem description'}>\n        <p className=\"name\">{this.badgeItem.name}</p>\n        <p>{this.badgeItem.description}</p>\n      </div>\n    );\n\n    \n\n    // // Badge category\n    // if (this.badgeItem) {\n    //   items.add(\n    //     'category',\n    //     <div className={'BadgeModalListItem category'}>\n    //       <p>\n    //         {this.badgeItem.category && this.badgeItem.category.name}\n\n    //         {/* Uncategorized */}\n    //         {!this.badgeItem.category && app.translator.trans('gtdxyz-flarum-badges.forum.uncategorized')}\n    //         {/* <Link\n    //           href={app.route(\"badges.category\", {\n    //             category: this.badgeItem.category.id,\n    //           })}\n    //         >\n    //           {app.translator.trans(\n    //             \"gtdxyz-flarum-badges.forum.all_badges\"\n    //           )}\n    //         </Link> */}\n    //       </p>\n    //     </div>\n    //   );\n    // }\n\n    // Badge earned on\n    if (this.badgeData) {\n      const earned_at = dayjs(this.badgeData.assigned_at).format('YYYY-MM-DD');\n      items.add(\n        'earned_date',\n        <div className={'BadgeModalListItem earned-on'}>\n          <p>{earned_at}</p>\n        </div>\n      );\n    }\n\n    return items;\n  }\n}\n","import Component from 'flarum/common/Component';\nimport Link from 'flarum/components/Link';\nimport UserBadge from '../../../common/components/UserBadge';\n\nexport default class BlockListView extends Component {\n  view() {\n    if (!this.attrs.badges) {\n      return null;\n    }\n\n    const badges = this.attrs.badges;\n\n    return (\n      <ul className={'BadgeCategoryList'}>\n        {badges.map((badge) => {\n          return (\n            <li>\n              <Link href={app.route('badges.detail', { id: badge.id() })} className={'BadgeContainer'}>\n                <div className={'BadgeContainerInfo'}>\n                  <UserBadge badge={badge} tooltip={false} />\n\n                  {/* <p className={'BadgeDescription'}>{badge.description()}</p> */}\n\n                  {app.forum.attribute('canViewDetailedBadgeUsers') && (\n                    <p>\n                      {app.translator.trans('gtdxyz-flarum-badges.forum.badge.earned_count', {\n                        count: badge.earnedAmount(),\n                      })}\n                    </p>\n                  )}\n                </div>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n","import Component from 'flarum/common/Component';\nimport Link from 'flarum/components/Link';\nimport UserBadge from '../../../common/components/UserBadge';\n\nexport default class TableView extends Component {\n  view() {\n    if (!this.attrs.badges) {\n      return null;\n    }\n\n    const badges = this.attrs.badges;\n\n    return (\n      <table width={'100%'} className={'BadgeTable'}>\n        <thead>\n          <tr>\n            <th scope=\"col\">{app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')}</th>\n            <th scope=\"col\">{app.translator.trans('gtdxyz-flarum-badges.forum.badge.description')}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {badges.map((badge) => {\n            return (\n              <tr>\n                <td>\n                  <Link href={app.route('badges.detail', { id: badge.id() })}>\n                    <UserBadge badge={badge} tooltip={false} />\n                  </Link>\n                </td>\n                <td>\n                  {badge.description()}\n\n                  <div className={'BadgeTableRewarded'}>\n                    {app.translator.trans('gtdxyz-flarum-badges.forum.badge.earned_count', {\n                      count: badge.earnedAmount(),\n                    })}\n                  </div>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/extend';\nimport Model from 'flarum/Model';\nimport User from 'flarum/models/User';\nimport UserPage from 'flarum/components/UserPage';\nimport UserControls from 'flarum/utils/UserControls';\nimport LinkButton from 'flarum/components/LinkButton';\nimport Button from 'flarum/components/Button';\nimport Badge from '../common/models/Badge';\nimport BadgeCategory from '../common/models/BadgeCategory';\nimport UserBadge from '../common/models/UserBadge';\nimport UserBadgesPage from './components/UserBadgesPage';\nimport BadgesPage from './components/BadgesPage';\nimport BadgeDetailPage from './components/BadgeDetailPage';\nimport GiveBadgeModal from './components/GiveBadgeModal';\nimport addSidebarNav from './addSidebarNav';\nimport BadgeUsersState from './states/BadgeUsersState';\nimport BadgeReceivedNotification from './notification/BadgeReceivedNotification';\nimport NotificationGrid from 'flarum/forum/components/NotificationGrid';\nimport addBadgesToUserCard from './addBadgesToUserCard';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport UserBadgesState from \"./states/UserBadgesState\";\n\napp.initializers.add('gtdxyz-flarum-badges', () => {\n  app.store.models.badges = Badge;\n  app.store.models.badgeCategories = BadgeCategory;\n  \n  app.store.models.userBadges = UserBadge;\n  // User.prototype.userBadges = Model.hasMany('userBadges');\n\n  // User.prototype.userPrimaryBadge = Model.hasOne('userPrimaryBadge');\n\n  app.userBadges = new UserBadgesState(app);\n\n  // Add user badges to the user profile\n  app.routes['user.badges'] = {\n    path: '/u/:username/badges',\n    component: UserBadgesPage,\n  };\n\n  // Badges overview page\n  app.routes.badges = {\n    path: '/badges',\n    component: BadgesPage,\n  };\n\n  // Future\n  // // Badges overview page\n  // app.routes[\"badges.category\"] = {\n  //   path: \"/badges/category/:id\",\n  //   component: BadgesPage,\n  // };\n\n  // Badge detail page\n  app.routes['badges.detail'] = {\n    path: '/badges/:id',\n    component: BadgeDetailPage,\n  };\n\n  addSidebarNav();\n\n  app.badgeUserListState = new BadgeUsersState({});\n\n  // Badge received notification\n  app.notificationComponents.badgeReceived = BadgeReceivedNotification;\n\n  // Enable badge notifications?\n  extend(NotificationGrid.prototype, 'notificationTypes', function (items) {\n    items.add('badgeReceived', {\n      name: 'badgeReceived',\n      icon: 'fas fa-user-tag',\n      label: app.translator.trans('gtdxyz-flarum-badges.forum.notification.settings'),\n    });\n  });\n\n  // Add uploads to user page menu items\n  extend(UserPage.prototype, 'navItems', function (items) {\n    if (!app.session.user) {\n      return;\n    }\n    items.add(\n      'badges',\n      LinkButton.component(\n        {\n          href: app.route('user.badges', {\n            username: this.user.username(),\n          }),\n          name: 'badges',\n          icon: 'fas fa-user-tag',\n        },\n        [app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')]\n      ),\n      15\n    );\n  });\n\n  extend(UserControls, 'moderationControls', function (items, user) {\n    // User can give badges\n    if (app.forum.attribute('canGiveBadge')) {\n      items.add(\n        'test',\n        <Button\n          icon=\"fas fa-user-tag\"\n          onclick={() =>\n            app.modal.show(GiveBadgeModal, {\n              user: user,\n            })\n          }\n        >\n          {app.translator.trans('gtdxyz-flarum-badges.forum.give_badge')}\n        </Button>\n      );\n    }\n  });\n\n  addBadgesToUserCard();\n\n\n  // For what???\n  // extend(DiscussionListState.prototype, 'requestParams', function (params) {\n  //   if (typeof params.include === 'string') {\n  //     params.include = [params.include];\n  //   } else {\n  //     params.include?.push('user.userBadges', 'user.userBadges.badge');\n  //   }\n  // });\n});\n","import Notification from 'flarum/forum/components/Notification';\n\nexport default class BadgeReceivedNotification extends Notification {\n  icon() {\n    return '';\n  }\n\n  href() {\n    return app.route('user.badges', {\n      username: app.session.user.username(),\n    });\n  }\n\n  content() {\n    return app.translator.trans('gtdxyz-flarum-badges.forum.notification.title');\n  }\n\n  excerpt() {\n    const subject = this.attrs.notification.subject();\n\n    return (\n      <div>\n        <i className={`icon ${subject.badge().icon()}`} />\n\n        {subject.badge().name()}\n      </div>\n    );\n  }\n}\n","import PaginatedListState from 'flarum/common/states/PaginatedListState';\n\nexport default class BadgeUsersState extends PaginatedListState {\n  constructor(params, page = 1) {\n    super(params, page, 18);\n  }\n\n  get type() {\n    return 'user-badges';\n  }\n}\n","export  default class UserBadgesState {\n    constructor(app) {\n      this.app = app;\n  \n      /**\n       * Whether or not the list are loading.\n       *\n       * @type {Boolean}\n       */\n      this.loading = false;\n    }\n  \n    /**\n     * Load list into the application's cache if they haven't already\n     * been loaded.\n     */\n    load(username) {\n\n      // if online cross 24H\n      if (this.cache) {\n        return;\n      }\n      \n      this.loading = true;\n      m.redraw();\n\n      this.app.store\n        .find('user-badges', {\n          filter: {user: username},\n        })\n        .then((badges) => {\n          this.cache = badges;\n        })\n        .catch(() => {})\n        .then(() => {\n          this.loading = false;\n          m.redraw();\n        });\n    }\n  }\n  ","export default function categorizeUserBadges(badges) {\n  const categories = {};\n  const uncategorized = [];\n  const badgesList = badges || [];\n\n  badgesList.map((userBadge) => {\n    if (!userBadge) return null;\n\n    // Categorized\n    if (userBadge.badge().category()) {\n      const category = userBadge.badge().category();\n\n      if (!categories[category.id()]) {\n        categories[category.id()] = {\n          name: category.name(),\n          category,\n          badges: [userBadge],\n        };\n      } else {\n        categories[category.id()].badges.push(userBadge);\n      }\n    }\n    // Uncategorized\n    else {\n      uncategorized.push(userBadge);\n    }\n  });\n\n  // Sort categories and map them into an array\n  let sortedCategories = Object.keys(categories)\n    .sort((a, b) => categories[a].category.order() - categories[b].category.order())\n    .map((category) => categories[category]);\n\n  // Add uncategorized category to list\n  if (uncategorized.length >= 1) {\n    sortedCategories.push({\n      name: app.translator.trans('gtdxyz-flarum-badges.forum.uncategorized'),\n      category: null,\n      badges: uncategorized,\n    });\n  }\n\n  return sortedCategories;\n}\n","\nexport default function hextorgba(hexcolor: string | null, opacity: number | 1): string {\n    // return if hexcolor is undefined or shorter than 4 characters, shortest hex form is #333;\n    // decided against regex hex color validation for performance considerations\n    if (!hexcolor || hexcolor.length < 4) {\n      return '';\n    }\n  \n    let hexnumbers = hexcolor.replace('#', '');\n  \n    if (hexnumbers.length === 3) {\n      hexnumbers += hexnumbers;\n    }\n  \n    const r = parseInt(hexnumbers.slice(0, 2), 16);\n    const g = parseInt(hexnumbers.slice(2, 4), 16);\n    const b = parseInt(hexnumbers.slice(4, 6), 16);\n    \n    return 'rgba('+r+','+g+','+b+','+opacity+')';\n  }\n  ","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/app'];","module.exports = flarum.core.compat['common/components/Link'];","module.exports = flarum.core.compat['common/components/Tooltip'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/helpers/listItems'];","module.exports = flarum.core.compat['common/states/PaginatedListState'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/IndexPage'];","module.exports = flarum.core.compat['components/Link'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['components/UserPage'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['forum/components/Notification'];","module.exports = flarum.core.compat['forum/components/NotificationGrid'];","module.exports = flarum.core.compat['forum/components/UserCard'];","module.exports = flarum.core.compat['forum/states/DiscussionListState'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['helpers/humanTime'];","module.exports = flarum.core.compat['models/User'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['utils/Stream'];","module.exports = flarum.core.compat['utils/UserControls'];","module.exports = flarum.core.compat['utils/mixin'];","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './src/common';\nexport * from './src/forum';\n"],"names":["Component","Tooltip","UserBadge","oninit","vnode","tooltip","attrs","forceVisibility","displayName","view","badge","isVisible","description","isPartlyHidden","image","onclick","opacity","undefined","name","id","backgroundColor","color","labelColor","borderColor","icon","iconColor","app","initializers","add","Model","mixin","Badge","apiEndpoint","exists","data","attribute","order","createdAt","earnedAmount","category","hasOne","BadgeCategory","isEnabled","isTable","users","hasMany","badges","user","isPrimary","assignedAt","inUserCard","extend","UserCard","Link","UserCardBadge","UserCardBadgeModal","SelectUserCardBadgesModal","addBadgesToUserCard","prototype","items","forum","visibleBadges","limit","map","badgeItem","modal","show","badgeData","session","push","translator","trans","e","preventDefault","IndexPage","LinkButton","addSidebarNav","route","Button","LoadingIndicator","avatar","humanTime","BadgeDetailContent","state","refreshParams","filter","badgeId","sort","loading","isInitialLoading","isLoadingNext","component","size","hasNext","className","loadNext","bind","isEmpty","getPages","pg","userBadge","username","Page","listItems","BadgeDetailPage","bodyClass","found","store","getById","m","param","find","then","history","setTitle","redraw","sidebarItems","toArray","count","badgeUserListState","Modal","ItemList","GiveBadgeModal","hextorgba","BadgeModal","title","content","margin","userBadgeData","confirm","hide","radials","radiale","background","earned_at","dayjs","format","earning_reason","TableView","BlockListView","BadgesPage","categories","all","a","b","length","Select","Stream","selectedBadge","userHasBadge","createRecord","userBadges","load","uncategorizedBadges","include","forEach","fields","target","value","checkUserHasBadge","Object","values","foundBadge","currentBadges","cache","onsubmit","save","relationships","response","handleErrors","Switch","selectedBadges","item","in_uer_card","badgesList","ubItem","ubItemId","parseInt","disabled","indexOf","currentIndex","splice","userCardBadges","in_user_card","categorizeUserBadges","UserBadgesContent","UserPage","UserBadgesPage","loadUser","background_color","assigned_at","User","UserControls","BadgeUsersState","BadgeReceivedNotification","NotificationGrid","DiscussionListState","UserBadgesState","models","badgeCategories","routes","path","notificationComponents","badgeReceived","label","href","Notification","excerpt","subject","notification","PaginatedListState","params","page","uncategorized","sortedCategories","keys","hexcolor","hexnumbers","replace","r","slice","g","_defineProperties","props","i","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","Constructor","protoProps","staticProps","setPrototypeOf","_inheritsLoose","subClass","superClass","create","constructor","_setPrototypeOf","o","p","__proto__"],"sourceRoot":""}
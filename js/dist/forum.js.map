{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@gtdxyz/flarum-ext-badges/webpack/bootstrap","webpack://@gtdxyz/flarum-ext-badges/webpack/runtime/compat get default export","webpack://@gtdxyz/flarum-ext-badges/webpack/runtime/define property getters","webpack://@gtdxyz/flarum-ext-badges/webpack/runtime/hasOwnProperty shorthand","webpack://@gtdxyz/flarum-ext-badges/webpack/runtime/make namespace object","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['forum/app']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['extend']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['Model']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['models/User']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/UserPage']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['utils/UserControls']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/LinkButton']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Button']\"","webpack://@gtdxyz/flarum-ext-badges/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@gtdxyz/flarum-ext-badges/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['utils/mixin']\"","webpack://@gtdxyz/flarum-ext-badges/./src/common/models/Badge.js","webpack://@gtdxyz/flarum-ext-badges/./src/common/models/BadgeCategory.js","webpack://@gtdxyz/flarum-ext-badges/./src/common/models/UserBadge.js","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/Component']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@gtdxyz/flarum-ext-badges/./src/common/components/UserBadge.tsx","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Modal']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['utils/ItemList']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Select']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['utils/Stream']\"","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/GiveBadgeModal.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/utils/hextorgba.ts","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/BadgeModal.tsx","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/UserBadgesContent.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/utils/categorizeUserBadges.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/UserBadgesPage.js","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Page']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/IndexPage']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Link']\"","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/views/TableView.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/views/BlockListView.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/BadgesPage.js","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['helpers/avatar']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['helpers/humanTime']\"","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/BadgeDetailContent.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/BadgeDetailPage.js","webpack://@gtdxyz/flarum-ext-badges/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://@gtdxyz/flarum-ext-badges/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://@gtdxyz/flarum-ext-badges/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://@gtdxyz/flarum-ext-badges/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/states/PaginatedListState']\"","webpack://@gtdxyz/flarum-ext-badges/./src/forum/states/BadgeUsersState.js","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@gtdxyz/flarum-ext-badges/./src/forum/notification/BadgeReceivedNotification.js","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['forum/components/NotificationGrid']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['common/extend']\"","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['forum/components/UserCard']\"","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/UserCardBadge.tsx","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/UserCardBadgeModal.tsx","webpack://@gtdxyz/flarum-ext-badges/external root \"flarum.core.compat['components/Switch']\"","webpack://@gtdxyz/flarum-ext-badges/./src/forum/components/SelectUserCardBadgesModal.tsx","webpack://@gtdxyz/flarum-ext-badges/./src/forum/states/UserBadgesState.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/index.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/addSidebarNav.js","webpack://@gtdxyz/flarum-ext-badges/./src/forum/addBadgesToUserCard.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/UserPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/UserControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Button'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/mixin'];","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Badge extends mixin(Model, {\n  name: Model.attribute('name'),\n  icon: Model.attribute('icon'),\n  order: Model.attribute('order'),\n  image: Model.attribute('image'),\n  description: Model.attribute('description'),\n  isVisible: Model.attribute('isVisible'),\n  createdAt: Model.attribute('createdAt'),\n  earnedAmount: Model.attribute('earnedAmount'),\n  category: Model.hasOne('category'),\n  backgroundColor: Model.attribute('backgroundColor'),\n  iconColor: Model.attribute('iconColor'),\n  labelColor: Model.attribute('labelColor'),\n}) {\n  apiEndpoint() {\n    return '/badges' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class BadgeCategory extends mixin(Model, {\n  name: Model.attribute('name'),\n  order: Model.attribute('order'),\n  description: Model.attribute('description'),\n  isEnabled: Model.attribute('isEnabled'),\n  createdAt: Model.attribute('createdAt'),\n  isTable: Model.attribute('isTable'),\n  users: Model.hasMany('users'),\n  badges: Model.hasMany('badges'),\n}) {\n  apiEndpoint() {\n    return '/badge-categories' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class UserBadge extends mixin(Model, {\n  user: Model.hasOne('user'),\n  badge: Model.hasOne('badge'),\n  description: Model.attribute('description'),\n  isPrimary: Model.attribute('isPrimary'),\n  assignedAt: Model.attribute('assignedAt'),\n  inUserCard: Model.attribute('inUserCard'),\n}) {\n  apiEndpoint() {\n    return '/user-badges' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import Component from 'flarum/common/Component';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nexport default class UserBadge extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.tooltip = this.attrs.tooltip !== false;\n    this.forceVisibility = this.attrs.forceVisibility === true;\n    this.displayName = this.attrs.displayName === true;\n  }\n\n  view() {\n    // Hide badge when not enabled\n    if (!this.attrs.badge.isVisible() && !this.forceVisibility) {\n      return null;\n    }\n\n    // Just show badge\n    if (this.tooltip === false) return this.badge();\n\n    return <Tooltip text={`${this.attrs.badge.description() ? this.attrs.badge.description() : ''}`}>{this.badge()}</Tooltip>;\n  }\n\n  badge() {\n    const isPartlyHidden = !this.attrs.badge.isVisible() && this.forceVisibility;\n\n    // This badge is an image\n    if (this.attrs.badge.image()) {\n      return (\n        <span style={this.displayName ? 'display:flex;justify-content:flex-start;align-items:center;' : 'display:inline-block;'}>\n          <img\n            src={this.attrs.badge.image()}\n            className={'UserBadgeImage'}\n            onclick={() => {\n              if (this.attrs.onclick) {\n                this.attrs.onclick();\n              }\n            }}\n            style={{\n              opacity: isPartlyHidden ? 0.5 : undefined,\n            }}\n          />\n          {this.displayName && this.attrs.badge.name()}\n        </span>\n      );\n    }\n\n    return (\n      <span\n        className={`UserBadge UserBadge-${this.attrs.badge.id()}`}\n        onclick={() => {\n          if (this.attrs.onclick) {\n            this.attrs.onclick();\n          }\n        }}\n        style={{\n          backgroundColor: this.attrs.badge.backgroundColor(),\n          color: this.attrs.badge.labelColor(),\n          borderColor: this.attrs.badge.backgroundColor(),\n          opacity: isPartlyHidden ? 0.5 : undefined,\n        }}\n      >\n        <i className={this.attrs.badge.icon()} style={{ color: this.attrs.badge.iconColor() }} /> {this.attrs.badge.name()}\n      </span>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Select'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/Stream'];","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport ItemList from 'flarum/utils/ItemList';\nimport Select from 'flarum/components/Select';\nimport Stream from 'flarum/utils/Stream';\nimport BadgeModal from './BadgeModal';\n\nexport default class GiveBadgeModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Select image\n    this.selectedBadge = this.attrs.badge ? this.attrs.badge.badge() : null;\n\n    // Current user\n    this.user = this.attrs.badge ? this.attrs.badge.user() : this.attrs.user;\n\n    // User has badge\n    this.userHasBadge = false;\n\n    // Badge model\n    this.badge = this.attrs.badge ? this.attrs.badge : app.store.createRecord('userBadges');\n\n    // Earning reason\n    this.description = Stream(this.badge.description());\n\n    app.userBadges.load(this.user.attribute('username'));\n\n    // List of available bagges\n    this.categories = {};\n\n    this.uncategorizedBadges = [];\n\n    this.loading = false;\n\n    // Load all available badges\n    if (!this.attrs.badge) {\n      this.loading = true;\n\n      app.store\n        .find('badges', {\n          include: 'category',\n        })\n        .then((badges) => {\n          badges.forEach((badge) => {\n            // Categorized\n            if (badge.category()) {\n              const category = badge.category();\n\n              if (!this.categories[category.id()]) {\n                this.categories[category.id()] = {\n                  category,\n                  badges: [badge],\n                };\n              } else {\n                this.categories[category.id()].badges.push(badge);\n              }\n            }\n            // Uncategorized\n            else {\n              this.uncategorizedBadges.push(badge);\n            }\n          });\n\n          this.loading = false;\n\n          // Redraw\n          m.redraw();\n        });\n    }\n  }\n\n  className() {\n    return 'Modal--small BadgeModal';\n  }\n\n  title() {\n    return app.translator.trans(`gtdxyz-flarum-badges.forum.${this.badge.exists ? 'update' : 'give'}_badge`);\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">\n          <div className=\"Form\">{this.fields().toArray()}</div>\n        </div>\n\n        <div className=\"Modal-footer\">\n          <Button className={'Button Button--primary'} type={'submit'} loading={this.loading} disabled={this.userHasBadge}>\n            {app.translator.trans('core.forum.composer_edit.submit_button')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    // Badge selector\n    items.add(\n      'badge',\n      <div className=\"BadgeModalListItem\">\n        <p>\n          <b>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.badge')}</b>\n        </p>\n\n        <div className={'Select'}>\n          <select\n            value={this.selectedBadge ? this.selectedBadge.id() : 'empty'}\n            disabled={!!this.attrs.badge}\n            onchange={(e) => {\n              if (e.target.value === 'empty') return;\n              this.selectedBadge = app.store.getById('badges', e.target.value);\n\n              // Check if the user already has this badge\n              this.checkUserHasBadge(this.selectedBadge);\n            }}\n            className=\"Select-input FormControl\"\n          >\n            <option value={'empty'}>{app.translator.trans('gtdxyz-flarum-badges.forum.select_badge')}</option>\n\n            {/* When no badge is selected, show all available badges */}\n            {!this.attrs.badge &&\n              Object.values(this.categories).map(({ category, badges }) => (\n                <optgroup label={category.name()}>\n                  {badges.map((badge) => (\n                    <option value={badge.id()}>{badge.name()}</option>\n                  ))}\n                </optgroup>\n              ))}\n\n            {!this.attrs.badge && this.uncategorizedBadges.length >= 1 && (\n              <optgroup label={app.translator.trans('gtdxyz-flarum-badges.forum.uncategorized')}>\n                {this.uncategorizedBadges.map((badge) => (\n                  <option value={badge.id()}>{badge.name()}</option>\n                ))}\n              </optgroup>\n            )}\n\n            {/* When a badge is already assigned */}\n            {!!this.attrs.badge && <option value={this.selectedBadge.id()}>{this.selectedBadge.name()}</option>}\n          </select>\n          <i class=\"icon fas fa-caret-down Select-caret\"></i>\n        </div>\n\n        {this.userHasBadge && <p className={'UserHasBadge'}>{app.translator.trans('gtdxyz-flarum-badges.forum.user_has_badge')}</p>}\n      </div>,\n      30\n    );\n\n    // Badge description\n    items.add(\n      'badge_description',\n      <div className={'BadgeModalListItem'}>\n        {/* <p>\n          <b>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.description')}:</b>\n        </p> */}\n        <p>{this.selectedBadge ? this.selectedBadge.description() : app.translator.trans('gtdxyz-flarum-badges.forum.select_badge')}</p>\n      </div>,\n      30\n    );\n\n    // Badge earning reason\n    items.add(\n      'description',\n      <div className=\"BadgeModalListItem\">\n        <p>\n          <b>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.earning_reason')}</b>\n        </p>\n        <textarea\n          className=\"FormControl\"\n          placeholder={app.translator.trans('gtdxyz-flarum-badges.forum.badge.earning_reason')}\n          bidi={this.description}\n        />\n      </div>,\n      30\n    );\n\n    return items;\n  }\n\n  checkUserHasBadge(badge) {\n    let foundBadge = false;\n\n    let currentBadges = app.userBadges.cache || [];\n\n    currentBadges.map((userBadge) => {\n      if (userBadge.badge() == badge) {\n        foundBadge = true;\n      }\n    });\n\n    this.userHasBadge = foundBadge;\n\n    m.redraw();\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    this.badge\n      .save({\n        description: this.description(),\n        relationships: this.attrs.badge\n          ? {}\n          : {\n              badge: this.selectedBadge,\n              user: this.user,\n            },\n      })\n      .then(\n        () => {\n          // Re-open badge modal\n          if (this.attrs.badge) {\n            app.modal.show(BadgeModal, {\n              badge: this.attrs.badge.badge(),\n              userBadgeData: this.attrs.badge,\n            });\n          } else {\n            this.hide();\n          }\n\n          m.redraw();\n        },\n        (response) => {\n          this.loading = false;\n          this.handleErrors(response);\n        }\n      );\n  }\n}\n","export default function hextorgba(hexcolor: string | null, opacity: number | 1): string {\n  // return if hexcolor is undefined or shorter than 4 characters, shortest hex form is #333;\n  // decided against regex hex color validation for performance considerations\n  if (!hexcolor || hexcolor.length < 4) {\n    return '';\n  }\n\n  let hexnumbers = hexcolor.replace('#', '');\n\n  if (hexnumbers.length === 3) {\n    hexnumbers += hexnumbers;\n  }\n\n  const r = parseInt(hexnumbers.slice(0, 2), 16);\n  const g = parseInt(hexnumbers.slice(2, 4), 16);\n  const b = parseInt(hexnumbers.slice(4, 6), 16);\n\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + opacity + ')';\n}\n","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport type dayjs from 'dayjs';\nimport ItemList from 'flarum/utils/ItemList';\nimport LinkButton from 'flarum/components/LinkButton';\nimport GiveBadgeModal from './GiveBadgeModal';\nimport hextorgba from '../utils/hextorgba';\n\nexport default class BadgeModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.loading = false;\n  }\n\n  className() {\n    return 'Modal--small BadgeModal BadgeModal-plain';\n  }\n\n  title() {\n    // return app.translator.trans('gtdxyz-flarum-badges.forum.badge_information');\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">{this.data().toArray()}</div>\n        <div className=\"Modal-footer\">\n          <LinkButton\n            href={app.route('badges.detail', {\n              id: this.attrs.badge.id(),\n            })}\n            className={'Button'}\n            style={{\n              margin: '0 10px',\n            }}\n          >\n            {app.translator.trans('gtdxyz-flarum-badges.forum.badge.badge_details')}\n          </LinkButton>\n\n          {this.attrs.userBadgeData && app.forum.attribute('canGiveBadge') && (\n            <Button\n              className={'Button Button--primary'}\n              onclick={() => {\n                if (confirm(app.translator.trans('gtdxyz-flarum-badges.forum.moderation.remove_badge_confirm'))) {\n                  this.loading = true;\n                  this.attrs.userBadgeData.delete().then(() => this.hide());\n                }\n              }}\n              loading={this.loading}\n            >\n              {app.translator.trans('gtdxyz-flarum-badges.forum.moderation.remove_badge')}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  data() {\n    const items = new ItemList();\n    const radials = hextorgba(this.attrs.badge.backgroundColor(), 0.7);\n    const radiale = hextorgba(this.attrs.badge.backgroundColor(), 1);\n\n    // Badge name\n    items.add(\n      'name',\n      <div\n        className={'BadgeModalListItem name'}\n        style={{\n          background: 'radial-gradient(' + radials + ',' + radiale + ')',\n        }}\n      >\n        {this.attrs.badge.image() ? (\n          <img src={this.attrs.badge.image()} className=\"icon\" />\n        ) : (\n          <i className={this.attrs.badge.icon()} style={'color:' + this.attrs.badge.iconColor()}></i>\n        )}\n      </div>\n    );\n\n    // Badge description\n    items.add(\n      'description',\n      <div className={'BadgeModalListItem description'}>\n        <p className=\"name\">{this.attrs.badge.name()}</p>\n        <p>{this.attrs.badge.description()}</p>\n      </div>\n    );\n\n    // Badge category\n    if (this.attrs.userBadgeData) {\n      items.add(\n        'category',\n        <div className={'BadgeModalListItem category'}>\n          {/* <p>\n            <b>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.category')}:</b>\n          </p> */}\n          <p>\n            {this.attrs.badge.category() && this.attrs.badge.category().name()}\n\n            {/* Uncategorized */}\n            {!this.attrs.badge.category() && app.translator.trans('gtdxyz-flarum-badges.forum.uncategorized')}\n            {/* <Link\n              href={app.route(\"badges.category\", {\n                category: this.attrs.badge.category().id(),\n              })}\n            >\n              {app.translator.trans(\n                \"gtdxyz-flarum-badges.forum.all_badges\"\n              )}\n            </Link> */}\n          </p>\n        </div>\n      );\n    }\n\n    // Badge amount\n    // if (this.attrs.badge && this.attrs.badge.earnedAmount()) {\n    //   items.add(\n    //     'earned_amount',\n    //     <div className={'BadgeModalListItem'}>\n    //       <p>\n    //         {app.translator.trans('gtdxyz-flarum-badges.forum.badge.earned_count', {\n    //           count: this.attrs.badge.earnedAmount(),\n    //         })}\n    //       </p>\n    //     </div>\n    //   );\n    // }\n\n    // Badge earned on\n    if (this.attrs.userBadgeData) {\n      const earned_at = dayjs(this.attrs.userBadgeData.assignedAt()).format('YYYY-MM-DD');\n      items.add(\n        'earned_date',\n        <div className={'BadgeModalListItem earned-on'}>\n          <p>{earned_at}</p>\n        </div>\n      );\n    }\n\n    // Badge earning reason\n    const earning_reason = false;\n    if (earning_reason && this.attrs.userBadgeData && (this.attrs.userBadgeData.description() || app.forum.attribute('canGiveBadge'))) {\n      items.add(\n        'earning_reason',\n        <div className={'BadgeModalListItem'}>\n          <p>\n            <b>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.earning_reason')}:</b>\n          </p>\n\n          <p>\n            {this.attrs.userBadgeData.description() ? (\n              this.attrs.userBadgeData.description()\n            ) : (\n              <i>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.no_earning_reason')}</i>\n            )}\n          </p>\n          <p>\n            {app.forum.attribute('canGiveBadge') && (\n              <a\n                href={'#'}\n                onclick={(e) => {\n                  e.preventDefault();\n                  app.modal.show(GiveBadgeModal, {\n                    badge: this.attrs.userBadgeData,\n                  });\n                }}\n              >\n                {app.translator.trans('gtdxyz-flarum-badges.forum.badge.update_earning_reason')}\n              </a>\n            )}\n          </p>\n        </div>\n      );\n    }\n\n    return items;\n  }\n}\n","import Component from 'flarum/common/Component';\nimport UserBadge from '../../common/components/UserBadge';\nimport categorizeUserBadges from '../utils/categorizeUserBadges';\nimport BadgeModal from './BadgeModal';\n\nexport default class UserBadgesContent extends Component {\n  view() {\n    const badgesList = app.userBadges.cache || [];\n\n    const categories = categorizeUserBadges(badgesList);\n\n    return (\n      <div className=\"UserBadges\">\n        {categories.length === 0 && (\n          <div className={'Placeholder'}>\n            <p>{app.translator.trans('gtdxyz-flarum-badges.forum.user_no_badges')}</p>\n          </div>\n        )}\n\n        {categories.length >= 1 &&\n          categories.map(({ name, category, badges }) => {\n            if (category && !category.isEnabled()) return null;\n\n            return (\n              <div className={'UserBadgesCategory'}>\n                <h3>{name}</h3>\n\n                {category && category.description() && <p>{category.description()}</p>}\n                <div className=\"badgeList\">\n                  {badges\n                    .sort((a, b) => a.badge().order() - b.badge().order())\n                    .map((userBadge) => (\n                      <UserBadge\n                        badge={userBadge.badge()}\n                        onclick={() =>\n                          app.modal.show(BadgeModal, {\n                            badge: userBadge.badge(),\n                            userBadgeData: userBadge,\n                          })\n                        }\n                      />\n                    ))}\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n}\n","export default function categorizeUserBadges(badges) {\n  const categories = {};\n  const uncategorized = [];\n  const badgesList = badges || [];\n\n  badgesList.map((userBadge) => {\n    if (!userBadge) return null;\n\n    // Categorized\n    if (userBadge.badge().category()) {\n      const category = userBadge.badge().category();\n\n      if (!categories[category.id()]) {\n        categories[category.id()] = {\n          name: category.name(),\n          category,\n          badges: [userBadge],\n        };\n      } else {\n        categories[category.id()].badges.push(userBadge);\n      }\n    }\n    // Uncategorized\n    else {\n      uncategorized.push(userBadge);\n    }\n  });\n\n  // Sort categories and map them into an array\n  let sortedCategories = Object.keys(categories)\n    .sort((a, b) => categories[a].category.order() - categories[b].category.order())\n    .map((category) => categories[category]);\n\n  // Add uncategorized category to list\n  if (uncategorized.length >= 1) {\n    sortedCategories.push({\n      name: app.translator.trans('gtdxyz-flarum-badges.forum.uncategorized'),\n      category: null,\n      badges: uncategorized,\n    });\n  }\n\n  return sortedCategories;\n}\n","import UserPage from 'flarum/components/UserPage';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport UserBadgesContent from './UserBadgesContent';\n\nexport default class UserBadgesPage extends UserPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.user = null;\n\n    this.loading = true;\n\n    this.loadUser(m.route.param('username'));\n    app.userBadges.load(m.route.param('username'));\n  }\n\n  content() {\n    if (!this.user || this.loading) {\n      return <LoadingIndicator size={46} />;\n    }\n\n    if (app.session.user) {\n      return UserBadgesContent.component({\n        user: this.user,\n      });\n    } else {\n      return (\n        <div className={'Placeholder'}>\n          <p>{app.translator.trans('gtdxyz-flarum-badges.forum.hidden_badges')}</p>\n        </div>\n      );\n    }\n  }\n\n  show(user) {\n    super.show(user);\n    this.user = user;\n\n    this.loading = false;\n\n    // app.store\n    //   .find('user-badges', {\n    //     filter: {user: this.user.username()}\n    //   })\n    //   .then(() => {\n    //     this.loading = false;\n    //     m.redraw();\n    //   });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/listItems'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Link'];","import Component from 'flarum/common/Component';\nimport Link from 'flarum/components/Link';\nimport UserBadge from '../../../common/components/UserBadge';\n\nexport default class TableView extends Component {\n  view() {\n    if (!this.attrs.badges) {\n      return null;\n    }\n\n    const badges = this.attrs.badges;\n\n    return (\n      <table width={'100%'} className={'BadgeTable'}>\n        <thead>\n          <tr>\n            <th scope=\"col\">{app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')}</th>\n            <th scope=\"col\">{app.translator.trans('gtdxyz-flarum-badges.forum.badge.description')}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {badges.map((badge) => {\n            return (\n              <tr>\n                <td>\n                  <Link href={app.route('badges.detail', { id: badge.id() })}>\n                    <UserBadge badge={badge} tooltip={false} />\n                  </Link>\n                </td>\n                <td>\n                  {badge.description()}\n\n                  <div className={'BadgeTableRewarded'}>\n                    {app.translator.trans('gtdxyz-flarum-badges.forum.badge.earned_count', {\n                      count: badge.earnedAmount(),\n                    })}\n                  </div>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import Component from 'flarum/common/Component';\nimport Link from 'flarum/components/Link';\nimport UserBadge from '../../../common/components/UserBadge';\n\nexport default class BlockListView extends Component {\n  view() {\n    if (!this.attrs.badges) {\n      return null;\n    }\n\n    const badges = this.attrs.badges;\n\n    return (\n      <ul className={'BadgeCategoryList'}>\n        {badges.map((badge) => {\n          return (\n            <li>\n              <Link href={app.route('badges.detail', { id: badge.id() })} className={'BadgeContainer'}>\n                <div className={'BadgeContainerInfo'}>\n                  <UserBadge badge={badge} tooltip={false} />\n\n                  {/* <p className={'BadgeDescription'}>{badge.description()}</p> */}\n\n                  {app.forum.attribute('canViewDetailedBadgeUsers') && (\n                    <p>\n                      {app.translator.trans('gtdxyz-flarum-badges.forum.badge.earned_count', {\n                        count: badge.earnedAmount(),\n                      })}\n                    </p>\n                  )}\n                </div>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n","import Page from 'flarum/components/Page';\nimport IndexPage from 'flarum/components/IndexPage';\nimport listItems from 'flarum/common/helpers/listItems';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport TableView from './views/TableView';\nimport BlockListView from './views/BlockListView';\n\nexport default class BadgesPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.bodyClass = 'App--index';\n\n    this.loading = true;\n\n    app.history.push('badges');\n\n    app.setTitle(app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges'));\n\n    // Load badge categories\n    app.store.find('badge-categories').then(() => {\n      this.loading = false;\n      m.redraw();\n    });\n  }\n\n  view() {\n    const categories = app.store.all('badgeCategories').sort((a, b) => a.order() - b.order());\n\n    return (\n      <div className=\"IndexPage\">\n        {/* {IndexPage.prototype.hero()} */}\n\n        <div className=\"container\">\n          <div className=\"sideNavContainer\">\n            <nav className=\"IndexPage-nav sideNav\">\n              <ul>{listItems(IndexPage.prototype.sidebarItems().toArray())}</ul>\n            </nav>\n            <div className=\"IndexPage-results sideNavOffset\">\n              <h2 className={'BadgeOverviewTitle'}>{app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')}</h2>\n\n              {this.loading && <LoadingIndicator size={'large'} />}\n\n              {!this.loading &&\n                categories.map((category) => {\n                  const badges = category.badges().sort((a, b) => a.order() - b.order());\n                  if (badges.length > 0) {\n                    return (\n                      <div className={'BadgeCategory'}>\n                        <h3>{category.name()}</h3>\n                        {category.description() && <p>{category.description()}</p>}\n\n                        {category.isTable() && <TableView badges={badges} />}\n\n                        {!category.isTable() && <BlockListView badges={badges} />}\n                      </div>\n                    );\n                  }\n                })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/humanTime'];","import Component from 'flarum/common/Component';\nimport Button from 'flarum/components/Button';\nimport Link from 'flarum/components/Link';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport avatar from 'flarum/helpers/avatar';\nimport humanTime from 'flarum/helpers/humanTime';\n\nexport default class BadgeDetailContent extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Load articles\n    this.attrs.state.refreshParams({\n      filter: {\n        badge: this.attrs.badgeId,\n      },\n      sort: '-assignedAt',\n    });\n  }\n\n  view() {\n    const state = this.attrs.state;\n\n    let loading = null;\n\n    if (state.isInitialLoading() || state.isLoadingNext()) {\n      loading = LoadingIndicator.component({\n        size: 'large',\n      });\n    } else if (state.hasNext()) {\n      loading = Button.component(\n        {\n          className: 'Button',\n          icon: 'fas fa-chevron-down',\n          onclick: state.loadNext.bind(state),\n        },\n        app.translator.trans('core.forum.discussion_list.load_more_button')\n      );\n    }\n\n    // No items\n    if (state.isInitialLoading() && state.isEmpty()) {\n      return <LoadingIndicator />;\n    }\n\n    // No items\n    if (state.isEmpty()) {\n      return <div className={'BadgeDetailContent-empty'}>{app.translator.trans('gtdxyz-flarum-badges.forum.no_received')}</div>;\n    }\n\n    return (\n      <div>\n        <ul className={'BadgeDetailContent'}>\n          {state.getPages().map((pg) => {\n            return pg.items.map((userBadge) => {\n              return (\n                <li>\n                  <Link\n                    href={app.route('user', {\n                      username: userBadge.user().username(),\n                    })}\n                    className={'BadgeDetailContent-user'}\n                  >\n                    {avatar(userBadge.user())}\n\n                    <div className={'BadgeDetailContentuserinfo'}>\n                      <h4>{userBadge.user().displayName()}</h4>\n                      {/* <p>\n                        {app.translator.trans('gtdxyz-flarum-badges.forum.badge.received_on', {\n                          date: humanTime(userBadge.assignedAt()),\n                        })}\n                      </p> */}\n                    </div>\n                  </Link>\n                </li>\n              );\n            });\n          })}\n        </ul>\n\n        {loading && <div className=\"SupportSearchList-loadMore\">{loading}</div>}\n      </div>\n    );\n  }\n}\n","import Page from 'flarum/components/Page';\nimport IndexPage from 'flarum/components/IndexPage';\nimport listItems from 'flarum/common/helpers/listItems';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport LinkButton from 'flarum/components/LinkButton';\nimport BadgeDetailContent from './BadgeDetailContent';\n\nimport UserBadge from '../../common/components/UserBadge';\n\nexport default class BadgeDetailPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.bodyClass = 'App--index';\n\n    const found = app.store.getById('badges', m.route.param('id'));\n\n    this.loading = !found;\n\n    if (!found) {\n      // Load badge categories\n      app.store.find(`badges/${m.route.param('id')}`).then((badge) => {\n        this.loading = false;\n\n        app.history.push('badgeDetailPage', badge.name());\n\n        this.setTitle(badge);\n\n        m.redraw();\n      });\n    } else {\n      app.history.push('badgeDetailPage', found.name());\n\n      this.setTitle(found);\n    }\n  }\n\n  setTitle(badge) {\n    app.setTitle(`${badge.name()} - ${app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')}`);\n  }\n\n  view() {\n    const badge = app.store.getById('badges', m.route.param('id'));\n\n    return (\n      <div className=\"IndexPage\">\n        {/* {IndexPage.prototype.hero()} */}\n\n        <div className=\"container\">\n          <div className=\"sideNavContainer\">\n            <nav className=\"IndexPage-nav sideNav\">\n              <ul>{listItems(IndexPage.prototype.sidebarItems().toArray())}</ul>\n            </nav>\n            <div className=\"IndexPage-results sideNavOffset\">\n              <LinkButton href={app.route('badges')} icon={'fas fa-chevron-left'} className={'Button BadgesOverviewButton'}>\n                {app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')}\n              </LinkButton>\n\n              {this.loading && <LoadingIndicator size={'large'} />}\n\n              {!this.loading && (\n                <div className={'BadgeDetailContent-Info'}>\n                  <UserBadge badge={badge} tooltip={false} />\n\n                  <div className={'BadgeDetailContent-Info-meta'}>\n                    <h3>{badge.name()}</h3>\n                    <p>{badge.description()}</p>\n                  </div>\n                </div>\n              )}\n\n              {badge && app.forum.attribute('canViewDetailedBadgeUsers') && (\n                <h3>\n                  {app.translator.trans('gtdxyz-flarum-badges.forum.badge.earned_by_count', {\n                    count: badge.earnedAmount(),\n                  })}\n                </h3>\n              )}\n\n              {!this.loading && app.forum.attribute('canViewDetailedBadgeUsers') && (\n                <BadgeDetailContent state={app.badgeUserListState} badgeId={badge.id()} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/states/PaginatedListState'];","import PaginatedListState from 'flarum/common/states/PaginatedListState';\n\nexport default class BadgeUsersState extends PaginatedListState {\n  constructor(params, page = 1) {\n    super(params, page, 18);\n  }\n\n  get type() {\n    return 'user-badges';\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Notification'];","import Notification from 'flarum/forum/components/Notification';\n\nexport default class BadgeReceivedNotification extends Notification {\n  icon() {\n    return '';\n  }\n\n  href() {\n    return app.route('user.badges', {\n      username: app.session.user.username(),\n    });\n  }\n\n  content() {\n    return app.translator.trans('gtdxyz-flarum-badges.forum.notification.title');\n  }\n\n  excerpt() {\n    const subject = this.attrs.notification.subject();\n\n    return (\n      <div>\n        <i className={`icon ${subject.attribute('icon')}`} />\n\n        {subject.attribute('name')}\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/NotificationGrid'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserCard'];","import Component from 'flarum/common/Component';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nexport default class UserCardBadge extends Component {\n  view() {\n    const item = this.attrs.badge;\n    const tooltip = this.attrs.tooltip !== false;\n    const forceVisibility = this.attrs.forceVisibility === true;\n\n    // Hide badge when not enabled\n    if (!item.isVisible && !forceVisibility) {\n      return null;\n    }\n\n    // Just show badge\n    if (tooltip === false) return this.badge();\n\n    return <Tooltip text={`${item.description ? item.description : ''}`}>{this.badge(item, forceVisibility)}</Tooltip>;\n  }\n\n  badge(item, forceVisibility) {\n    const isPartlyHidden = !item.isVisible && forceVisibility;\n\n    // This badge is an image\n    if (item.image) {\n      return (\n        <img\n          src={item.image}\n          className={'UserBadgeImage'}\n          onclick={() => {\n            if (this.attrs.onclick) {\n              this.attrs.onclick();\n            }\n          }}\n          style={{\n            opacity: isPartlyHidden ? 0.5 : undefined,\n          }}\n        />\n      );\n    }\n\n    return (\n      <span\n        className={`UserBadge UserBadge-${item.id}`}\n        onclick={() => {\n          if (this.attrs.onclick) {\n            this.attrs.onclick();\n          }\n        }}\n        style={{\n          backgroundColor: item.backgroundColor,\n          color: item.labelColor,\n          borderColor: item.backgroundColor,\n          opacity: isPartlyHidden ? 0.5 : undefined,\n        }}\n      >\n        <i className={item.icon} style={{ color: item.iconColor }} /> {item.name}\n      </span>\n    );\n  }\n}\n","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport type dayjs from 'dayjs';\nimport ItemList from 'flarum/utils/ItemList';\nimport LinkButton from 'flarum/components/LinkButton';\nimport hextorgba from '../utils/hextorgba';\n\nexport default class UserCardBadgeModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.loading = false;\n    this.badgeItem = this.attrs.badge;\n    this.badgeData = this.attrs.badgeData;\n  }\n\n  className() {\n    return 'Modal--small BadgeModal BadgeModal-plain';\n  }\n\n  title() {\n    // return app.translator.trans('gtdxyz-flarum-badges.forum.badge_information');\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">{this.data().toArray()}</div>\n        <div className=\"Modal-footer\">\n          {/* detail button */}\n          <LinkButton\n            href={app.route('badges.detail', {\n              id: this.badgeItem.id,\n            })}\n            className={'Button'}\n            style={{\n              margin: '0 10px',\n            }}\n          >\n            {app.translator.trans('gtdxyz-flarum-badges.forum.badge.badge_details')}\n          </LinkButton>\n\n          {/* remove button */}\n          {this.badgeData && app.forum.attribute('canGiveBadge') && (\n            <Button\n              className={'Button Button--primary'}\n              onclick={() => {\n                if (confirm(app.translator.trans('gtdxyz-flarum-badges.forum.moderation.remove_badge_confirm'))) {\n                  this.loading = true;\n                  const that = this;\n                  // this.badgeData.delete().then(() => this.hide());\n\n                  app\n                    .request({\n                      method: 'DELETE',\n                      url: app.forum.attribute('apiUrl') + '/user-badges/' + this.badgeData.id,\n                      body: {},\n                    })\n                    .then(() => {\n                      that.hide();\n                    });\n                }\n              }}\n              loading={this.loading}\n            >\n              {app.translator.trans('gtdxyz-flarum-badges.forum.moderation.remove_badge')}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  data() {\n    const items = new ItemList();\n    const radials = hextorgba(this.badgeItem.background_color, 0.7);\n    const radiale = hextorgba(this.badgeItem.background_color, 1);\n\n    // Badge name\n    items.add(\n      'name',\n      <div\n        className={'BadgeModalListItem name'}\n        style={{\n          background: 'radial-gradient(' + radials + ',' + radiale + ')',\n        }}\n      >\n        {this.badgeItem.image ? (\n          <img src={this.badgeItem.image} className=\"icon\" />\n        ) : (\n          <i className={this.badgeItem.icon} style={'color:' + this.badgeItem.icon_color}></i>\n        )}\n      </div>\n    );\n\n    // Badge description\n    items.add(\n      'description',\n      <div className={'BadgeModalListItem description'}>\n        <p className=\"name\">{this.badgeItem.name}</p>\n        <p>{this.badgeItem.description}</p>\n      </div>\n    );\n\n    // // Badge category\n    // if (this.badgeItem) {\n    //   items.add(\n    //     'category',\n    //     <div className={'BadgeModalListItem category'}>\n    //       <p>\n    //         {this.badgeItem.category && this.badgeItem.category.name}\n\n    //         {/* Uncategorized */}\n    //         {!this.badgeItem.category && app.translator.trans('gtdxyz-flarum-badges.forum.uncategorized')}\n    //         {/* <Link\n    //           href={app.route(\"badges.category\", {\n    //             category: this.badgeItem.category.id,\n    //           })}\n    //         >\n    //           {app.translator.trans(\n    //             \"gtdxyz-flarum-badges.forum.all_badges\"\n    //           )}\n    //         </Link> */}\n    //       </p>\n    //     </div>\n    //   );\n    // }\n\n    // Badge earned on\n    if (this.badgeData) {\n      const earned_at = dayjs(this.badgeData.assigned_at).format('YYYY-MM-DD');\n      items.add(\n        'earned_date',\n        <div className={'BadgeModalListItem earned-on'}>\n          <p>{earned_at}</p>\n        </div>\n      );\n    }\n\n    return items;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Switch'];","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport ItemList from 'flarum/utils/ItemList';\nimport Switch from 'flarum/components/Switch';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nimport UserBadge from '../../common/components/UserBadge';\n\nexport default class SelectUserCardBadgesModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.loading = false;\n\n    this.limit = app.forum.attribute('numberOfBadgesOnUserCard');\n    // this.selectedBadges = this.attrs.user.attribute('badges');\n\n    this.selectedBadges = this.attrs.user\n      .attribute('badges')\n      .filter((item) => item.in_uer_card != 0)\n      .map((item) => item.id);\n\n    app.userBadges.load(this.attrs.user.attribute('username'));\n  }\n\n  className() {\n    return 'Modal--big UserCardBadgesModal';\n  }\n\n  title() {\n    return app.translator.trans('gtdxyz-flarum-badges.forum.badges_in_card.title');\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">{this.data().toArray()}</div>\n        <div className=\"Modal-footer\">\n          <Button className={'Button Button--primary'} onclick={() => this.save()} loading={this.loading}>\n            {app.translator.trans('gtdxyz-flarum-badges.forum.save_changes')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  data() {\n    const items = new ItemList();\n    const badgesList = app.userBadges.cache || [];\n\n    // const categories = categorizeUserBadges(badgesList);\n\n    // Badge name\n    items.add(\n      'info',\n      <div className={'BadgeModalListItem'}>\n        <p>{app.translator.trans('gtdxyz-flarum-badges.forum.badges_in_card.description')}</p>\n        <p>\n          {app.translator.trans('gtdxyz-flarum-badges.forum.badges_in_card.select_limit', {\n            limit: app.forum.attribute('numberOfBadgesOnUserCard'),\n          })}\n        </p>\n      </div>\n    );\n\n    // Loop through all badge categories\n\n    items.add(\n      'badge-list',\n      <div className={'UserCardBadgesModalCategory'}>\n        {/* Loop through the badges */}\n        {badgesList\n          // .sort((a, b) => a.badge().order - b.badge().order)\n          .map((ubItem) => {\n            const ubItemId = parseInt(ubItem.id());\n            const disabled = this.selectedBadges.length >= this.limit && this.selectedBadges.indexOf(ubItemId) === -1;\n\n            return (\n              <Tooltip\n                text={\n                  disabled\n                    ? app.translator.trans('gtdxyz-flarum-badges.forum.badges_in_card.hit_limit', {\n                        limit: app.forum.attribute('numberOfBadgesOnUserCard'),\n                      })\n                    : ''\n                }\n                position=\"bottom\"\n              >\n                <div\n                  className={'UserCardBadgesModalCategory-badge'}\n                  onclick={() => {\n                    if (disabled) {\n                      return;\n                    }\n\n                    const currentIndex = this.selectedBadges.indexOf(ubItemId);\n\n                    // Remove from selected list\n                    if (currentIndex >= 0) {\n                      this.selectedBadges.splice(currentIndex, 1);\n                    } else {\n                      // Add to list\n                      this.selectedBadges.push(ubItemId);\n                    }\n                  }}\n                >\n                  <div className={'UserCardBadgesModalCategory-badge-preview'}>\n                    <UserBadge badge={ubItem.badge()} onclick={() => {}} />\n                    {ubItem.badge().image() && <div className=\"preview-name\">{ubItem.badge().name()}</div>}\n                  </div>\n\n                  <div className={'UserCardBadgesModalCategory-badge-switch'}>\n                    {Switch.component({\n                      state: this.selectedBadges.indexOf(ubItemId) >= 0,\n                      disabled,\n                    })}\n                  </div>\n                </div>\n              </Tooltip>\n            );\n          })}\n      </div>\n    );\n\n    return items;\n  }\n\n  save() {\n    this.loading = true;\n\n    this.attrs.user\n      .save({ userCardBadges: this.selectedBadges })\n      .then(() => {\n        // Update current user badges store\n\n        // this.attrs.user.attribute('badges').map((badgeItem) => {\n        //   badgeItem.in_user_card = this.selectedBadges.indexOf(parseInt(badgeItem.id)) >= 0;\n        // });\n\n        this.hide();\n      })\n      .catch(() => {})\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","export default class UserBadgesState {\n  constructor(app) {\n    this.app = app;\n\n    /**\n     * Whether or not the list are loading.\n     *\n     * @type {Boolean}\n     */\n    this.loading = false;\n  }\n\n  /**\n   * Load list into the application's cache if they haven't already\n   * been loaded.\n   */\n  load(username) {\n    // if online cross 24H\n    if (this.cache) {\n      return;\n    }\n\n    this.loading = true;\n    m.redraw();\n\n    this.app.store\n      .find('user-badges', {\n        filter: { user: username },\n      })\n      .then((badges) => {\n        this.cache = badges;\n      })\n      .catch(() => {})\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/extend';\nimport Model from 'flarum/Model';\nimport User from 'flarum/models/User';\nimport UserPage from 'flarum/components/UserPage';\nimport UserControls from 'flarum/utils/UserControls';\nimport LinkButton from 'flarum/components/LinkButton';\nimport Button from 'flarum/components/Button';\nimport Badge from '../common/models/Badge';\nimport BadgeCategory from '../common/models/BadgeCategory';\nimport UserBadge from '../common/models/UserBadge';\nimport UserBadgesPage from './components/UserBadgesPage';\nimport BadgesPage from './components/BadgesPage';\nimport BadgeDetailPage from './components/BadgeDetailPage';\nimport GiveBadgeModal from './components/GiveBadgeModal';\nimport addSidebarNav from './addSidebarNav';\nimport BadgeUsersState from './states/BadgeUsersState';\nimport BadgeReceivedNotification from './notification/BadgeReceivedNotification';\nimport NotificationGrid from 'flarum/forum/components/NotificationGrid';\nimport addBadgesToUserCard from './addBadgesToUserCard';\nimport UserBadgesState from './states/UserBadgesState';\n\napp.initializers.add('gtdxyz-flarum-badges', () => {\n  app.store.models.badges = Badge;\n  app.store.models.badgeCategories = BadgeCategory;\n\n  UserBadge.prototype.badge = Model.hasOne('badge');\n  app.store.models.userBadges = UserBadge;\n  User.prototype.userBadges = Model.hasMany('userBadges');\n\n  // User.prototype.userPrimaryBadge = Model.hasOne('userPrimaryBadge');\n\n  app.userBadges = new UserBadgesState(app);\n\n  // Add user badges to the user profile\n  app.routes['user.badges'] = {\n    path: '/u/:username/badges',\n    component: UserBadgesPage,\n  };\n\n  // Badges overview page\n  app.routes.badges = {\n    path: '/badges',\n    component: BadgesPage,\n  };\n\n  // Future\n  // // Badges overview page\n  // app.routes[\"badges.category\"] = {\n  //   path: \"/badges/category/:id\",\n  //   component: BadgesPage,\n  // };\n\n  // Badge detail page\n  app.routes['badges.detail'] = {\n    path: '/badges/:id',\n    component: BadgeDetailPage,\n  };\n\n  addSidebarNav();\n\n  app.badgeUserListState = new BadgeUsersState({});\n\n  // Badge received notification\n  app.notificationComponents.badgeReceived = BadgeReceivedNotification;\n\n  // Enable badge notifications?\n  extend(NotificationGrid.prototype, 'notificationTypes', function (items) {\n    items.add('badgeReceived', {\n      name: 'badgeReceived',\n      icon: 'fas fa-user-tag',\n      label: app.translator.trans('gtdxyz-flarum-badges.forum.notification.settings'),\n    });\n  });\n\n  // Add uploads to user page menu items\n  extend(UserPage.prototype, 'navItems', function (items) {\n    if (!app.session.user) {\n      return;\n    }\n    items.add(\n      'badges',\n      LinkButton.component(\n        {\n          href: app.route('user.badges', {\n            username: this.user.username(),\n          }),\n          name: 'badges',\n          icon: 'fas fa-user-tag',\n        },\n        [app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')]\n      ),\n      15\n    );\n  });\n\n  extend(UserControls, 'moderationControls', function (items, user) {\n    // User can give badges\n    if (app.forum.attribute('canGiveBadge')) {\n      items.add(\n        'test',\n        <Button\n          icon=\"fas fa-user-tag\"\n          onclick={() =>\n            app.modal.show(GiveBadgeModal, {\n              user: user,\n            })\n          }\n        >\n          {app.translator.trans('gtdxyz-flarum-badges.forum.give_badge')}\n        </Button>\n      );\n    }\n  });\n\n  addBadgesToUserCard();\n});\n","import { extend } from 'flarum/extend';\nimport IndexPage from 'flarum/components/IndexPage';\nimport LinkButton from 'flarum/components/LinkButton';\n\nexport default function addSidebarNav() {\n  extend(IndexPage.prototype, 'navItems', function (items) {\n    items.add(\n      'badges',\n      <LinkButton icon=\"fas fa-id-badge\" href={app.route('badges')}>\n        {app.translator.trans('gtdxyz-flarum-badges.forum.badge.badges')}\n      </LinkButton>,\n      15\n    );\n\n    return items;\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport UserCard from 'flarum/forum/components/UserCard';\nimport Link from 'flarum/common/components/Link';\nimport UserCardBadge from './components/UserCardBadge';\nimport UserCardBadgeModal from './components/UserCardBadgeModal';\nimport SelectUserCardBadgesModal from './components/SelectUserCardBadgesModal';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nexport default function addBadgesToUserCard() {\n  extend(UserCard.prototype, 'infoItems', function (items) {\n    // Get user\n    const user = this.attrs.user;\n    \n\n    // Don't show badges\n    if (!app.forum.attribute('showBadgesOnUserCard') || !user.attribute('badges')) return;\n\n    const visibleBadges = user.attribute('badges') ?? [];\n\n    // No badges to show\n    // if (visibleBadges.length < 1 || !visibleBadges) return;\n    if (user.attribute('badges_count') <= 0) return;\n\n    const limit = app.forum.attribute('numberOfBadgesOnUserCard');\n\n    const badges = [];\n\n    visibleBadges.forEach((badgeItem, indx) => {\n      badges.push(\n        <UserCardBadge\n          badge={badgeItem.badge}\n          onclick={() =>\n            app.modal.show(UserCardBadgeModal, {\n              badge: badgeItem.badge,\n              badgeData: badgeItem,\n            })\n          }\n        />\n      );\n    });\n\n    // Manage badges\n    if ((app.session.user && user.id() === app.session.user.id() && app.forum.attribute('editOwnUserCardBadges')) || app.forum.attribute('editUserCardBadges')) {\n      badges.push(\n        <Tooltip text={app.translator.trans('gtdxyz-flarum-badges.forum.badges_in_card.manage_badges')}>\n          <a\n            href={'#'}\n            className=\"UserBadge more-badges\"\n            onclick={(e) => {\n              e.preventDefault();\n              app.modal.show(SelectUserCardBadgesModal, { user: user });\n            }}\n          >\n            <i className={'fas fa-pencil-alt BadgeIconOnly'} />\n          </a>\n        </Tooltip>\n      );\n    }\n\n    items.add('badges', badges);\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","Badge","_mixin","apply","arguments","apiEndpoint","this","exists","data","id","mixin","Model","name","icon","order","image","description","isVisible","createdAt","earnedAmount","category","backgroundColor","iconColor","labelColor","BadgeCategory","isEnabled","isTable","users","badges","UserBadge","user","badge","isPrimary","assignedAt","inUserCard","_Component","_proto","oninit","vnode","tooltip","attrs","forceVisibility","displayName","view","m","Tooltip","text","_this","isPartlyHidden","style","src","className","onclick","opacity","undefined","color","borderColor","Component","GiveBadgeModal","_Modal","selectedBadge","userHasBadge","app","store","createRecord","Stream","userBadges","load","attribute","categories","uncategorizedBadges","loading","find","include","then","forEach","push","redraw","title","translator","trans","content","fields","toArray","Button","type","disabled","_this2","items","ItemList","add","onchange","e","target","getById","checkUserHasBadge","values","map","_ref","label","length","class","placeholder","bidi","foundBadge","cache","userBadge","onsubmit","_this3","preventDefault","save","relationships","modal","show","BadgeModal","userBadgeData","hide","response","handleErrors","Modal","hextorgba","hexcolor","hexnumbers","replace","parseInt","slice","LinkButton","href","route","margin","forum","confirm","radials","radiale","background","earned_at","dayjs","format","UserBadgesContent","uncategorized","sortedCategories","keys","sort","b","categorizeUserBadges","UserBadgesPage","_UserPage","loadUser","param","LoadingIndicator","size","session","component","UserPage","TableView","width","scope","Link","count","BlockListView","BadgesPage","_Page","bodyClass","history","setTitle","all","listItems","IndexPage","sidebarItems","Page","BadgeDetailContent","state","refreshParams","filter","badgeId","isInitialLoading","isLoadingNext","hasNext","loadNext","isEmpty","getPages","pg","username","avatar","BadgeDetailPage","found","badgeUserListState","_typeof","iterator","toPropertyKey","t","i","r","toPrimitive","TypeError","String","_defineProperties","props","descriptor","configurable","writable","BadgeUsersState","_PaginatedListState","params","page","Constructor","protoProps","PaginatedListState","BadgeReceivedNotification","_Notification","excerpt","subject","notification","Notification","UserCardBadge","item","UserCardBadgeModal","badgeItem","badgeData","that","request","method","url","body","background_color","icon_color","assigned_at","SelectUserCardBadgesModal","limit","selectedBadges","in_uer_card","badgesList","ubItem","ubItemId","indexOf","position","currentIndex","splice","Switch","userCardBadges","UserBadgesState","models","badgeCategories","User","path","extend","badgeReceived","NotificationGrid","UserControls","UserCard","_user$attribute","visibleBadges","indx"],"sourceRoot":""}